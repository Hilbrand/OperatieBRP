<?xml version="1.0" encoding="UTF-8"?>
<server>

    <mbean code="org.jboss.cache.TreeCache" name="jboss.cache:service=TreeCache">

        <depends>jboss:service=Naming</depends>
        <depends>jboss:service=TransactionManager</depends>

        <!-- Configure the TransactionManager 
        <attribute name="TransactionManagerLookupClass">org.jboss.cache.DummyTransactionManagerLookup</attribute>
		-->

        <!-- Isolation level : SERIALIZABLE REPEATABLE_READ (default) READ_COMMITTED READ_UNCOMMITTED NONE -->
        <attribute name="IsolationLevel">REPEATABLE_READ</attribute>

        <!-- Valid modes are LOCAL, REPL_ASYNC and REPL_SYNC -->
        <attribute name="CacheMode">REPL_SYNC</attribute>

        <!-- Just used for async repl: use a replication queue -->
        <attribute name="UseReplQueue">false</attribute>

        <!-- Replication interval for replication queue (in ms) -->
        <attribute name="ReplQueueInterval">0</attribute>

        <!-- Max number of elements which trigger replication -->
        <attribute name="ReplQueueMaxElements">0</attribute>

        <!-- Name of cluster. Needs to be the same for all clusters, in order to find each other -->
        <attribute name="ClusterName">FtpFileCache-Cluster</attribute>

        <!--attribute name="ClusterConfig">
            <config>
                <UDP mcast_addr="228.1.2.3" mcast_port="48866" 
					bind_addr="localhost"
					receive_on_all_interfaces="true"
					send_on_all_interfaces="true"
                    ip_ttl="64" ip_mcast="true" 
                    mcast_send_buf_size="150000" mcast_recv_buf_size="80000"
                    ucast_send_buf_size="150000" ucast_recv_buf_size="80000"
                    loopback="false"/>
                <PING timeout="2000" num_initial_members="2" up_thread="false" down_thread="false"/>
                <MERGE2 min_interval="10000" max_interval="20000"/>
                <FD_SOCK/>
                <VERIFY_SUSPECT timeout="1500" up_thread="false" down_thread="false"/>
                <pbcast.NAKACK gc_lag="50" retransmit_timeout="600,1200,2400,4800" max_xmit_size="8192" up_thread="false" down_thread="false"/>
                <UNICAST timeout="600,1200,2400" down_thread="false"/>
                <pbcast.STABLE desired_avg_gossip="20000" up_thread="false" down_thread="false"/>
                <FRAG frag_size="8192" down_thread="false" up_thread="false"/>
                <pbcast.GMS join_timeout="5000" join_retry_timeout="2000" shun="true" print_local_addr="true"/>
                <pbcast.STATE_TRANSFER up_thread="true" down_thread="true"/>
            </config>
        </attribute -->

        <!-- Whether or not to fetch state on joining a cluster -->
        <attribute name="FetchStateOnStartup">true</attribute>

        <!--
            The max amount of time (in milliseconds) we wait until the
            initial state (ie. the contents of the cache) are retrieved from
            existing members in a clustered environment
        -->
        <attribute name="InitialStateRetrievalTimeout">10000</attribute>

        <!--
            Number of milliseconds to wait until all responses for a
            synchronous call have been received.
        -->
        <attribute name="SyncReplTimeout">10000</attribute>

        <!-- Max number of milliseconds to wait for a lock acquisition -->
        <attribute name="LockAcquisitionTimeout">15000</attribute>


        <attribute name="EvictionPolicyClass">org.jboss.cache.eviction.LRUPolicy</attribute>
		<attribute name="EvictionPolicyConfig">
			<config>
				<attribute name="wakeUpIntervalSeconds">60</attribute>
				<!-- Cache wide default -->
				<region name="/_default_">
				<attribute name="maxNodes">5000</attribute>
				<attribute name="timeToLiveSeconds">1000</attribute>
				</region>
				<region name="/ftp/cache">
					<attribute name="maxNodes">5000</attribute>
					<attribute name="timeToLiveSeconds">60</attribute>
					<attribute name="maxAgeSeconds">60</attribute>
		      </region>
		   </config>
		</attribute>
		
		<attribute name="CacheLoaderConfiguration">
	        <config>
				<!-- if passivation is true, only the first cache loader is used; the rest are ignored -->
				<passivation>false</passivation>
				
				<!-- comma delimited FQNs to preload -->
				<preload>/ftp/cache</preload>
				<!-- are the cache loaders shared in a cluster? -->
				<shared>false</shared>
				
				<!-- we can now have multiple cache loaders, which get chained -->
				<!-- the 'cacheloader' element may be repeated -->
				<cacheloader>
					<class>org.jboss.cache.loader.JDBCCacheLoader</class>
					<properties>
						cache.jdbc.driver=org.h2.Driver
						cache.jdbc.url=jdbc:h2:tcp://localhost:1707/HelloworldFTPDB
						cache.jdbc.user=sa
						cache.jdbc.password=
					</properties>
					<!-- whether the cache loader writes are asynchronous -->
					<async>false</async>
					
					<!-- only one cache loader in the chain may set fetchPersistentState to true.
					An exception is thrown if more than one cache loader sets this to true. -->
					<fetchPersistentState>false</fetchPersistentState>
					
					<!-- determines whether this cache loader ignores writes - defaults to false. -->
					<ignoreModifications>false</ignoreModifications>
					
					<!-- if set to true, purges the contents of this cache loader when the cache starts u Defaults to false. -->
					<purgeOnStartup>false</purgeOnStartup>
					
				</cacheloader>
			</config>
		</attribute>
        
    </mbean>

</server>
