/**
 * This file is copyright 2017 State of the Netherlands (Ministry of Interior Affairs and Kingdom Relations).
 * It is made available under the terms of the GNU Affero General Public License, version 3 as published by the Free Software Foundation.
 * The project of which this file is part, may be found at https://github.com/MinBZK/operatieBRP.
 */

package nl.bzk.brp.toegangsbewaking.test.model;

// Generated 23-sep-2011 15:40:39 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * Land generated by hbm2java
 */
@Entity
@Table(name = "land", schema = "kern", uniqueConstraints = @UniqueConstraint(columnNames = "naam"))
public class Land implements java.io.Serializable {

    private int                      id;
    private String                   naam;
    private String                   iso31661alpha2;
    private Integer                  dataanvgel;
    private Integer                  dateindegel;
    private Set<Relatie>             relatiesForLandaanv              = new HashSet<Relatie>(0);
    private Set<Pers>                persesForLandoverlijden          = new HashSet<Pers>(0);
    private Set<Persadres>           persadreses                      = new HashSet<Persadres>(0);
    private Set<Hisrelatie>          hisrelatiesForLandeinde          = new HashSet<Hisrelatie>(0);
    private Set<Pers>                persesForLandgeboorte            = new HashSet<Pers>(0);
    private Set<Relatie>             relatiesForLandeinde             = new HashSet<Relatie>(0);
    private Set<Hispersoverlijden>   hispersoverlijdens               = new HashSet<Hispersoverlijden>(0);
    private Set<Hispersimmigratie>   hispersimmigraties               = new HashSet<Hispersimmigratie>(0);
    private Set<Hispersadresbladres> hispersadresbladreses            = new HashSet<Hispersadresbladres>(0);
    private Set<Hispersgeboorte>     hispersgeboortes                 = new HashSet<Hispersgeboorte>(0);
    private Set<Hisrelatie>          hisrelatiesForLandaanv           = new HashSet<Hisrelatie>(0);
    private Set<Pers>                persesForLandvanwaaringeschreven = new HashSet<Pers>(0);

    public Land() {
    }

    public Land(int id, String naam) {
        this.id = id;
        this.naam = naam;
    }

    public Land(int id, String naam, String iso31661alpha2, Integer dataanvgel, Integer dateindegel,
            Set<Relatie> relatiesForLandaanv, Set<Pers> persesForLandoverlijden, Set<Persadres> persadreses,
            Set<Hisrelatie> hisrelatiesForLandeinde, Set<Pers> persesForLandgeboorte,
            Set<Relatie> relatiesForLandeinde, Set<Hispersoverlijden> hispersoverlijdens,
            Set<Hispersimmigratie> hispersimmigraties, Set<Hispersadresbladres> hispersadresbladreses,
            Set<Hispersgeboorte> hispersgeboortes, Set<Hisrelatie> hisrelatiesForLandaanv,
            Set<Pers> persesForLandvanwaaringeschreven)
    {
        this.id = id;
        this.naam = naam;
        this.iso31661alpha2 = iso31661alpha2;
        this.dataanvgel = dataanvgel;
        this.dateindegel = dateindegel;
        this.relatiesForLandaanv = relatiesForLandaanv;
        this.persesForLandoverlijden = persesForLandoverlijden;
        this.persadreses = persadreses;
        this.hisrelatiesForLandeinde = hisrelatiesForLandeinde;
        this.persesForLandgeboorte = persesForLandgeboorte;
        this.relatiesForLandeinde = relatiesForLandeinde;
        this.hispersoverlijdens = hispersoverlijdens;
        this.hispersimmigraties = hispersimmigraties;
        this.hispersadresbladreses = hispersadresbladreses;
        this.hispersgeboortes = hispersgeboortes;
        this.hisrelatiesForLandaanv = hisrelatiesForLandaanv;
        this.persesForLandvanwaaringeschreven = persesForLandvanwaaringeschreven;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "naam", unique = true, nullable = false, length = 40)
    public String getNaam() {
        return this.naam;
    }

    public void setNaam(String naam) {
        this.naam = naam;
    }

    @Column(name = "iso31661alpha2", length = 2)
    public String getIso31661alpha2() {
        return this.iso31661alpha2;
    }

    public void setIso31661alpha2(String iso31661alpha2) {
        this.iso31661alpha2 = iso31661alpha2;
    }

    @Column(name = "dataanvgel", precision = 8, scale = 0)
    public Integer getDataanvgel() {
        return this.dataanvgel;
    }

    public void setDataanvgel(Integer dataanvgel) {
        this.dataanvgel = dataanvgel;
    }

    @Column(name = "dateindegel", precision = 8, scale = 0)
    public Integer getDateindegel() {
        return this.dateindegel;
    }

    public void setDateindegel(Integer dateindegel) {
        this.dateindegel = dateindegel;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandaanv")
    public Set<Relatie> getRelatiesForLandaanv() {
        return this.relatiesForLandaanv;
    }

    public void setRelatiesForLandaanv(Set<Relatie> relatiesForLandaanv) {
        this.relatiesForLandaanv = relatiesForLandaanv;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandoverlijden")
    public Set<Pers> getPersesForLandoverlijden() {
        return this.persesForLandoverlijden;
    }

    public void setPersesForLandoverlijden(Set<Pers> persesForLandoverlijden) {
        this.persesForLandoverlijden = persesForLandoverlijden;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "land")
    public Set<Persadres> getPersadreses() {
        return this.persadreses;
    }

    public void setPersadreses(Set<Persadres> persadreses) {
        this.persadreses = persadreses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandeinde")
    public Set<Hisrelatie> getHisrelatiesForLandeinde() {
        return this.hisrelatiesForLandeinde;
    }

    public void setHisrelatiesForLandeinde(Set<Hisrelatie> hisrelatiesForLandeinde) {
        this.hisrelatiesForLandeinde = hisrelatiesForLandeinde;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandgeboorte")
    public Set<Pers> getPersesForLandgeboorte() {
        return this.persesForLandgeboorte;
    }

    public void setPersesForLandgeboorte(Set<Pers> persesForLandgeboorte) {
        this.persesForLandgeboorte = persesForLandgeboorte;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandeinde")
    public Set<Relatie> getRelatiesForLandeinde() {
        return this.relatiesForLandeinde;
    }

    public void setRelatiesForLandeinde(Set<Relatie> relatiesForLandeinde) {
        this.relatiesForLandeinde = relatiesForLandeinde;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "land")
    public Set<Hispersoverlijden> getHispersoverlijdens() {
        return this.hispersoverlijdens;
    }

    public void setHispersoverlijdens(Set<Hispersoverlijden> hispersoverlijdens) {
        this.hispersoverlijdens = hispersoverlijdens;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "land")
    public Set<Hispersimmigratie> getHispersimmigraties() {
        return this.hispersimmigraties;
    }

    public void setHispersimmigraties(Set<Hispersimmigratie> hispersimmigraties) {
        this.hispersimmigraties = hispersimmigraties;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "land")
    public Set<Hispersadresbladres> getHispersadresbladreses() {
        return this.hispersadresbladreses;
    }

    public void setHispersadresbladreses(Set<Hispersadresbladres> hispersadresbladreses) {
        this.hispersadresbladreses = hispersadresbladreses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "land")
    public Set<Hispersgeboorte> getHispersgeboortes() {
        return this.hispersgeboortes;
    }

    public void setHispersgeboortes(Set<Hispersgeboorte> hispersgeboortes) {
        this.hispersgeboortes = hispersgeboortes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandaanv")
    public Set<Hisrelatie> getHisrelatiesForLandaanv() {
        return this.hisrelatiesForLandaanv;
    }

    public void setHisrelatiesForLandaanv(Set<Hisrelatie> hisrelatiesForLandaanv) {
        this.hisrelatiesForLandaanv = hisrelatiesForLandaanv;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "landByLandvanwaaringeschreven")
    public Set<Pers> getPersesForLandvanwaaringeschreven() {
        return this.persesForLandvanwaaringeschreven;
    }

    public void setPersesForLandvanwaaringeschreven(Set<Pers> persesForLandvanwaaringeschreven) {
        this.persesForLandvanwaaringeschreven = persesForLandvanwaaringeschreven;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((dataanvgel == null) ? 0 : dataanvgel.hashCode());
        result = prime * result + ((dateindegel == null) ? 0 : dateindegel.hashCode());
        result = prime * result + ((iso31661alpha2 == null) ? 0 : iso31661alpha2.hashCode());
        result = prime * result + ((naam == null) ? 0 : naam.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof Land)) {
            return false;
        }
        Land other = (Land) obj;
        if (dataanvgel == null) {
            if (other.dataanvgel != null) {
                return false;
            }
        } else if (!dataanvgel.equals(other.dataanvgel)) {
            return false;
        }
        if (dateindegel == null) {
            if (other.dateindegel != null) {
                return false;
            }
        } else if (!dateindegel.equals(other.dateindegel)) {
            return false;
        }
        if (iso31661alpha2 == null) {
            if (other.iso31661alpha2 != null) {
                return false;
            }
        } else if (!iso31661alpha2.equals(other.iso31661alpha2)) {
            return false;
        }
        if (naam == null) {
            if (other.naam != null) {
                return false;
            }
        } else if (!naam.equals(other.naam)) {
            return false;
        }
        return true;
    }

}
