// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.brpreview.data.kern;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import nl.bzk.brp.brpreview.data.kern.Betr;
import nl.bzk.brp.brpreview.data.kern.Pers;
import nl.bzk.brp.brpreview.data.kern.Relatie;
import nl.bzk.brp.brpreview.data.kern.Srtbetr;

privileged aspect Betr_Roo_Finder {
    
    public static TypedQuery<Betr> Betr.findBetrsByPers(Pers pers) {
        if (pers == null) throw new IllegalArgumentException("The pers argument is required");
        EntityManager em = Betr.entityManager();
        TypedQuery<Betr> q = em.createQuery("SELECT o FROM Betr AS o WHERE o.pers = :pers", Betr.class);
        q.setParameter("pers", pers);
        return q;
    }
    
    public static TypedQuery<Betr> Betr.findBetrsByRelatie(Relatie relatie) {
        if (relatie == null) throw new IllegalArgumentException("The relatie argument is required");
        EntityManager em = Betr.entityManager();
        TypedQuery<Betr> q = em.createQuery("SELECT o FROM Betr AS o WHERE o.relatie = :relatie", Betr.class);
        q.setParameter("relatie", relatie);
        return q;
    }
    
    public static TypedQuery<Betr> Betr.findBetrsByRol(Srtbetr rol) {
        if (rol == null) throw new IllegalArgumentException("The rol argument is required");
        EntityManager em = Betr.entityManager();
        TypedQuery<Betr> q = em.createQuery("SELECT o FROM Betr AS o WHERE o.rol = :rol", Betr.class);
        q.setParameter("rol", rol);
        return q;
    }
    
}
