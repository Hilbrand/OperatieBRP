// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.data.kern;

import java.util.Set;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import nl.bzk.brp.model.data.kern.Land;
import nl.bzk.brp.model.data.kern.Pers;

privileged aspect Land_Roo_Finder {
    
    public static TypedQuery<Land> Land.findLandsByIso31661alpha2Equals(String iso31661alpha2) {
        if (iso31661alpha2 == null || iso31661alpha2.length() == 0) throw new IllegalArgumentException("The iso31661alpha2 argument is required");
        EntityManager em = Land.entityManager();
        TypedQuery<Land> q = em.createQuery("SELECT o FROM Land AS o WHERE o.iso31661alpha2 = :iso31661alpha2", Land.class);
        q.setParameter("iso31661alpha2", iso31661alpha2);
        return q;
    }
    
    public static TypedQuery<Land> Land.findLandsByLandcodeEquals(String landcode) {
        if (landcode == null || landcode.length() == 0) throw new IllegalArgumentException("The landcode argument is required");
        EntityManager em = Land.entityManager();
        TypedQuery<Land> q = em.createQuery("SELECT o FROM Land AS o WHERE o.landcode = :landcode", Land.class);
        q.setParameter("landcode", landcode);
        return q;
    }
    
    public static TypedQuery<Land> Land.findLandsByPerss(Set<Pers> perss) {
        if (perss == null) throw new IllegalArgumentException("The perss argument is required");
        EntityManager em = Land.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Land AS o WHERE");
        for (int i = 0; i < perss.size(); i++) {
            if (i > 0) queryBuilder.append(" AND");
            queryBuilder.append(" :perss_item").append(i).append(" MEMBER OF o.perss");
        }
        TypedQuery<Land> q = em.createQuery(queryBuilder.toString(), Land.class);
        int perssIndex = 0;
        for (Pers _pers: perss) {
            q.setParameter("perss_item" + perssIndex++, _pers);
        }
        return q;
    }
    
}
