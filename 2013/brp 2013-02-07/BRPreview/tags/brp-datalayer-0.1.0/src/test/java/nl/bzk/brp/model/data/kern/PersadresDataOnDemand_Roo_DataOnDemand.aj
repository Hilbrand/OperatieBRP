// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.data.kern;

import java.math.BigDecimal;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import nl.bzk.brp.model.data.kern.Aangadresh;
import nl.bzk.brp.model.data.kern.AangadreshDataOnDemand;
import nl.bzk.brp.model.data.kern.Functieadres;
import nl.bzk.brp.model.data.kern.FunctieadresDataOnDemand;
import nl.bzk.brp.model.data.kern.Land;
import nl.bzk.brp.model.data.kern.LandDataOnDemand;
import nl.bzk.brp.model.data.kern.Partij;
import nl.bzk.brp.model.data.kern.PartijDataOnDemand;
import nl.bzk.brp.model.data.kern.Pers;
import nl.bzk.brp.model.data.kern.PersDataOnDemand;
import nl.bzk.brp.model.data.kern.Persadres;
import nl.bzk.brp.model.data.kern.PersadresDataOnDemand;
import nl.bzk.brp.model.data.kern.Plaats;
import nl.bzk.brp.model.data.kern.PlaatsDataOnDemand;
import nl.bzk.brp.model.data.kern.Rdnwijzadres;
import nl.bzk.brp.model.data.kern.RdnwijzadresDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect PersadresDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PersadresDataOnDemand: @Component;
    
    private Random PersadresDataOnDemand.rnd = new SecureRandom();
    
    private List<Persadres> PersadresDataOnDemand.data;
    
    @Autowired
    private AangadreshDataOnDemand PersadresDataOnDemand.aangadreshDataOnDemand;
    
    @Autowired
    private PartijDataOnDemand PersadresDataOnDemand.partijDataOnDemand;
    
    @Autowired
    private LandDataOnDemand PersadresDataOnDemand.landDataOnDemand;
    
    @Autowired
    private PersDataOnDemand PersadresDataOnDemand.persDataOnDemand;
    
    @Autowired
    private RdnwijzadresDataOnDemand PersadresDataOnDemand.rdnwijzadresDataOnDemand;
    
    @Autowired
    private FunctieadresDataOnDemand PersadresDataOnDemand.functieadresDataOnDemand;
    
    @Autowired
    private PlaatsDataOnDemand PersadresDataOnDemand.plaatsDataOnDemand;
    
    public Persadres PersadresDataOnDemand.getNewTransientPersadres(int index) {
        Persadres obj = new Persadres();
        setAangadresh(obj, index);
        setAdresseerbaarobject(obj, index);
        setAfgekortenor(obj, index);
        setBladresregel1(obj, index);
        setBladresregel2(obj, index);
        setBladresregel3(obj, index);
        setBladresregel4(obj, index);
        setBladresregel5(obj, index);
        setBladresregel6(obj, index);
        setDataanvadresh(obj, index);
        setDatvertrekuitnederland(obj, index);
        setGem(obj, index);
        setGemdeel(obj, index);
        setHuisletter(obj, index);
        setHuisnr(obj, index);
        setHuisnrtoevoeging(obj, index);
        setIdentcodenraand(obj, index);
        setLand(obj, index);
        setLocoms(obj, index);
        setLoctovadres(obj, index);
        setNor(obj, index);
        setPers(obj, index);
        setPersadresstatushis(obj, index);
        setPostcode(obj, index);
        setRdnwijz(obj, index);
        setSrt(obj, index);
        setWpl(obj, index);
        return obj;
    }
    
    public void PersadresDataOnDemand.setAangadresh(Persadres obj, int index) {
        Aangadresh aangadresh = aangadreshDataOnDemand.getRandomAangadresh();
        obj.setAangadresh(aangadresh);
    }
    
    public void PersadresDataOnDemand.setAdresseerbaarobject(Persadres obj, int index) {
        String adresseerbaarobject = "adresseerbaaro_" + index;
        if (adresseerbaarobject.length() > 16) {
            adresseerbaarobject = adresseerbaarobject.substring(0, 16);
        }
        obj.setAdresseerbaarobject(adresseerbaarobject);
    }
    
    public void PersadresDataOnDemand.setAfgekortenor(Persadres obj, int index) {
        String afgekortenor = "afgekortenor_" + index;
        if (afgekortenor.length() > 24) {
            afgekortenor = afgekortenor.substring(0, 24);
        }
        obj.setAfgekortenor(afgekortenor);
    }
    
    public void PersadresDataOnDemand.setBladresregel1(Persadres obj, int index) {
        String bladresregel1 = "bladresregel1_" + index;
        if (bladresregel1.length() > 40) {
            bladresregel1 = bladresregel1.substring(0, 40);
        }
        obj.setBladresregel1(bladresregel1);
    }
    
    public void PersadresDataOnDemand.setBladresregel2(Persadres obj, int index) {
        String bladresregel2 = "bladresregel2_" + index;
        if (bladresregel2.length() > 40) {
            bladresregel2 = bladresregel2.substring(0, 40);
        }
        obj.setBladresregel2(bladresregel2);
    }
    
    public void PersadresDataOnDemand.setBladresregel3(Persadres obj, int index) {
        String bladresregel3 = "bladresregel3_" + index;
        if (bladresregel3.length() > 40) {
            bladresregel3 = bladresregel3.substring(0, 40);
        }
        obj.setBladresregel3(bladresregel3);
    }
    
    public void PersadresDataOnDemand.setBladresregel4(Persadres obj, int index) {
        String bladresregel4 = "bladresregel4_" + index;
        if (bladresregel4.length() > 40) {
            bladresregel4 = bladresregel4.substring(0, 40);
        }
        obj.setBladresregel4(bladresregel4);
    }
    
    public void PersadresDataOnDemand.setBladresregel5(Persadres obj, int index) {
        String bladresregel5 = "bladresregel5_" + index;
        if (bladresregel5.length() > 40) {
            bladresregel5 = bladresregel5.substring(0, 40);
        }
        obj.setBladresregel5(bladresregel5);
    }
    
    public void PersadresDataOnDemand.setBladresregel6(Persadres obj, int index) {
        String bladresregel6 = "bladresregel6_" + index;
        if (bladresregel6.length() > 40) {
            bladresregel6 = bladresregel6.substring(0, 40);
        }
        obj.setBladresregel6(bladresregel6);
    }
    
    public void PersadresDataOnDemand.setDataanvadresh(Persadres obj, int index) {
        BigDecimal dataanvadresh = BigDecimal.valueOf(index);
        obj.setDataanvadresh(dataanvadresh);
    }
    
    public void PersadresDataOnDemand.setDatvertrekuitnederland(Persadres obj, int index) {
        BigDecimal datvertrekuitnederland = BigDecimal.valueOf(index);
        obj.setDatvertrekuitnederland(datvertrekuitnederland);
    }
    
    public void PersadresDataOnDemand.setGem(Persadres obj, int index) {
        Partij gem = partijDataOnDemand.getRandomPartij();
        obj.setGem(gem);
    }
    
    public void PersadresDataOnDemand.setGemdeel(Persadres obj, int index) {
        String gemdeel = "gemdeel_" + index;
        if (gemdeel.length() > 24) {
            gemdeel = gemdeel.substring(0, 24);
        }
        obj.setGemdeel(gemdeel);
    }
    
    public void PersadresDataOnDemand.setHuisletter(Persadres obj, int index) {
        String huisletter = String.valueOf(index);
        if (huisletter.length() > 1) {
            huisletter = huisletter.substring(0, 1);
        }
        obj.setHuisletter(huisletter);
    }
    
    public void PersadresDataOnDemand.setHuisnr(Persadres obj, int index) {
        String huisnr = "hui_" + index;
        if (huisnr.length() > 5) {
            huisnr = huisnr.substring(0, 5);
        }
        obj.setHuisnr(huisnr);
    }
    
    public void PersadresDataOnDemand.setHuisnrtoevoeging(Persadres obj, int index) {
        String huisnrtoevoeging = "hu_" + index;
        if (huisnrtoevoeging.length() > 4) {
            huisnrtoevoeging = huisnrtoevoeging.substring(0, 4);
        }
        obj.setHuisnrtoevoeging(huisnrtoevoeging);
    }
    
    public void PersadresDataOnDemand.setIdentcodenraand(Persadres obj, int index) {
        String identcodenraand = "identcodenraan_" + index;
        if (identcodenraand.length() > 16) {
            identcodenraand = identcodenraand.substring(0, 16);
        }
        obj.setIdentcodenraand(identcodenraand);
    }
    
    public void PersadresDataOnDemand.setLand(Persadres obj, int index) {
        Land land = landDataOnDemand.getRandomLand();
        obj.setLand(land);
    }
    
    public void PersadresDataOnDemand.setLocoms(Persadres obj, int index) {
        String locoms = "locoms_" + index;
        if (locoms.length() > 40) {
            locoms = locoms.substring(0, 40);
        }
        obj.setLocoms(locoms);
    }
    
    public void PersadresDataOnDemand.setLoctovadres(Persadres obj, int index) {
        String loctovadres = "l" + index;
        if (loctovadres.length() > 2) {
            loctovadres = loctovadres.substring(0, 2);
        }
        obj.setLoctovadres(loctovadres);
    }
    
    public void PersadresDataOnDemand.setNor(Persadres obj, int index) {
        String nor = "nor_" + index;
        if (nor.length() > 80) {
            nor = nor.substring(0, 80);
        }
        obj.setNor(nor);
    }
    
    public void PersadresDataOnDemand.setPers(Persadres obj, int index) {
        Pers pers = persDataOnDemand.getRandomPers();
        obj.setPers(pers);
    }
    
    public void PersadresDataOnDemand.setPersadresstatushis(Persadres obj, int index) {
        String persadresstatushis = String.valueOf(index);
        if (persadresstatushis.length() > 1) {
            persadresstatushis = persadresstatushis.substring(0, 1);
        }
        obj.setPersadresstatushis(persadresstatushis);
    }
    
    public void PersadresDataOnDemand.setPostcode(Persadres obj, int index) {
        String postcode = "post_" + index;
        if (postcode.length() > 6) {
            postcode = postcode.substring(0, 6);
        }
        obj.setPostcode(postcode);
    }
    
    public void PersadresDataOnDemand.setRdnwijz(Persadres obj, int index) {
        Rdnwijzadres rdnwijz = rdnwijzadresDataOnDemand.getRandomRdnwijzadres();
        obj.setRdnwijz(rdnwijz);
    }
    
    public void PersadresDataOnDemand.setSrt(Persadres obj, int index) {
        Functieadres srt = functieadresDataOnDemand.getRandomFunctieadres();
        obj.setSrt(srt);
    }
    
    public void PersadresDataOnDemand.setWpl(Persadres obj, int index) {
        Plaats wpl = plaatsDataOnDemand.getRandomPlaats();
        obj.setWpl(wpl);
    }
    
    public Persadres PersadresDataOnDemand.getSpecificPersadres(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Persadres obj = data.get(index);
        Long id = obj.getId();
        return Persadres.findPersadres(id);
    }
    
    public Persadres PersadresDataOnDemand.getRandomPersadres() {
        init();
        Persadres obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Persadres.findPersadres(id);
    }
    
    public boolean PersadresDataOnDemand.modifyPersadres(Persadres obj) {
        return false;
    }
    
    public void PersadresDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Persadres.findPersadresEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Persadres' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Persadres>();
        for (int i = 0; i < 10; i++) {
            Persadres obj = getNewTransientPersadres(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
