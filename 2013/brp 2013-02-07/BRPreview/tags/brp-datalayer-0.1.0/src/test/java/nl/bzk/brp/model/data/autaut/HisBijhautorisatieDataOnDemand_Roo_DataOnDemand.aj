// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.data.autaut;

import java.math.BigDecimal;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import nl.bzk.brp.model.data.autaut.Beperkingpopulatie;
import nl.bzk.brp.model.data.autaut.BeperkingpopulatieDataOnDemand;
import nl.bzk.brp.model.data.autaut.Bijhautorisatie;
import nl.bzk.brp.model.data.autaut.BijhautorisatieDataOnDemand;
import nl.bzk.brp.model.data.autaut.HisBijhautorisatie;
import nl.bzk.brp.model.data.autaut.HisBijhautorisatieDataOnDemand;
import nl.bzk.brp.model.data.autaut.Srtbijhouding;
import nl.bzk.brp.model.data.autaut.SrtbijhoudingDataOnDemand;
import nl.bzk.brp.model.data.autaut.Toestand;
import nl.bzk.brp.model.data.autaut.ToestandDataOnDemand;
import nl.bzk.brp.model.data.kern.Actie;
import nl.bzk.brp.model.data.kern.ActieDataOnDemand;
import nl.bzk.brp.model.data.kern.Partij;
import nl.bzk.brp.model.data.kern.PartijDataOnDemand;
import nl.bzk.brp.model.data.kern.Srtpartij;
import nl.bzk.brp.model.data.kern.SrtpartijDataOnDemand;
import nl.bzk.brp.model.data.kern.Verantwoordelijke;
import nl.bzk.brp.model.data.kern.VerantwoordelijkeDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect HisBijhautorisatieDataOnDemand_Roo_DataOnDemand {
    
    declare @type: HisBijhautorisatieDataOnDemand: @Component;
    
    private Random HisBijhautorisatieDataOnDemand.rnd = new SecureRandom();
    
    private List<HisBijhautorisatie> HisBijhautorisatieDataOnDemand.data;
    
    @Autowired
    private ActieDataOnDemand HisBijhautorisatieDataOnDemand.actieDataOnDemand;
    
    @Autowired
    private BeperkingpopulatieDataOnDemand HisBijhautorisatieDataOnDemand.beperkingpopulatieDataOnDemand;
    
    @Autowired
    private BijhautorisatieDataOnDemand HisBijhautorisatieDataOnDemand.bijhautorisatieDataOnDemand;
    
    @Autowired
    private PartijDataOnDemand HisBijhautorisatieDataOnDemand.partijDataOnDemand;
    
    @Autowired
    private SrtpartijDataOnDemand HisBijhautorisatieDataOnDemand.srtpartijDataOnDemand;
    
    @Autowired
    private SrtbijhoudingDataOnDemand HisBijhautorisatieDataOnDemand.srtbijhoudingDataOnDemand;
    
    @Autowired
    private ToestandDataOnDemand HisBijhautorisatieDataOnDemand.toestandDataOnDemand;
    
    @Autowired
    private VerantwoordelijkeDataOnDemand HisBijhautorisatieDataOnDemand.verantwoordelijkeDataOnDemand;
    
    public HisBijhautorisatie HisBijhautorisatieDataOnDemand.getNewTransientHisBijhautorisatie(int index) {
        HisBijhautorisatie obj = new HisBijhautorisatie();
        setActieinh(obj, index);
        setActieverval(obj, index);
        setBeperkingpopulatie(obj, index);
        setBijhautorisatie(obj, index);
        setDateinde(obj, index);
        setDatingang(obj, index);
        setGeautoriseerdepartij(obj, index);
        setGeautoriseerdesrtpartij(obj, index);
        setOms(obj, index);
        setSrtbijhouding(obj, index);
        setToestand(obj, index);
        setTsreg(obj, index);
        setTsverval(obj, index);
        setVerantwoordelijke(obj, index);
        return obj;
    }
    
    public void HisBijhautorisatieDataOnDemand.setActieinh(HisBijhautorisatie obj, int index) {
        Actie actieinh = actieDataOnDemand.getRandomActie();
        obj.setActieinh(actieinh);
    }
    
    public void HisBijhautorisatieDataOnDemand.setActieverval(HisBijhautorisatie obj, int index) {
        Actie actieverval = actieDataOnDemand.getRandomActie();
        obj.setActieverval(actieverval);
    }
    
    public void HisBijhautorisatieDataOnDemand.setBeperkingpopulatie(HisBijhautorisatie obj, int index) {
        Beperkingpopulatie beperkingpopulatie = beperkingpopulatieDataOnDemand.getRandomBeperkingpopulatie();
        obj.setBeperkingpopulatie(beperkingpopulatie);
    }
    
    public void HisBijhautorisatieDataOnDemand.setBijhautorisatie(HisBijhautorisatie obj, int index) {
        Bijhautorisatie bijhautorisatie = bijhautorisatieDataOnDemand.getRandomBijhautorisatie();
        obj.setBijhautorisatie(bijhautorisatie);
    }
    
    public void HisBijhautorisatieDataOnDemand.setDateinde(HisBijhautorisatie obj, int index) {
        BigDecimal dateinde = BigDecimal.valueOf(index);
        obj.setDateinde(dateinde);
    }
    
    public void HisBijhautorisatieDataOnDemand.setDatingang(HisBijhautorisatie obj, int index) {
        BigDecimal datingang = BigDecimal.valueOf(index);
        obj.setDatingang(datingang);
    }
    
    public void HisBijhautorisatieDataOnDemand.setGeautoriseerdepartij(HisBijhautorisatie obj, int index) {
        Partij geautoriseerdepartij = partijDataOnDemand.getRandomPartij();
        obj.setGeautoriseerdepartij(geautoriseerdepartij);
    }
    
    public void HisBijhautorisatieDataOnDemand.setGeautoriseerdesrtpartij(HisBijhautorisatie obj, int index) {
        Srtpartij geautoriseerdesrtpartij = srtpartijDataOnDemand.getRandomSrtpartij();
        obj.setGeautoriseerdesrtpartij(geautoriseerdesrtpartij);
    }
    
    public void HisBijhautorisatieDataOnDemand.setOms(HisBijhautorisatie obj, int index) {
        String oms = "oms_" + index;
        if (oms.length() > 250) {
            oms = oms.substring(0, 250);
        }
        obj.setOms(oms);
    }
    
    public void HisBijhautorisatieDataOnDemand.setSrtbijhouding(HisBijhautorisatie obj, int index) {
        Srtbijhouding srtbijhouding = srtbijhoudingDataOnDemand.getRandomSrtbijhouding();
        obj.setSrtbijhouding(srtbijhouding);
    }
    
    public void HisBijhautorisatieDataOnDemand.setToestand(HisBijhautorisatie obj, int index) {
        Toestand toestand = toestandDataOnDemand.getRandomToestand();
        obj.setToestand(toestand);
    }
    
    public void HisBijhautorisatieDataOnDemand.setTsreg(HisBijhautorisatie obj, int index) {
        Date tsreg = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setTsreg(tsreg);
    }
    
    public void HisBijhautorisatieDataOnDemand.setTsverval(HisBijhautorisatie obj, int index) {
        Date tsverval = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setTsverval(tsverval);
    }
    
    public void HisBijhautorisatieDataOnDemand.setVerantwoordelijke(HisBijhautorisatie obj, int index) {
        Verantwoordelijke verantwoordelijke = verantwoordelijkeDataOnDemand.getRandomVerantwoordelijke();
        obj.setVerantwoordelijke(verantwoordelijke);
    }
    
    public HisBijhautorisatie HisBijhautorisatieDataOnDemand.getSpecificHisBijhautorisatie(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        HisBijhautorisatie obj = data.get(index);
        Long id = obj.getId();
        return HisBijhautorisatie.findHisBijhautorisatie(id);
    }
    
    public HisBijhautorisatie HisBijhautorisatieDataOnDemand.getRandomHisBijhautorisatie() {
        init();
        HisBijhautorisatie obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return HisBijhautorisatie.findHisBijhautorisatie(id);
    }
    
    public boolean HisBijhautorisatieDataOnDemand.modifyHisBijhautorisatie(HisBijhautorisatie obj) {
        return false;
    }
    
    public void HisBijhautorisatieDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = HisBijhautorisatie.findHisBijhautorisatieEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'HisBijhautorisatie' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<HisBijhautorisatie>();
        for (int i = 0; i < 10; i++) {
            HisBijhautorisatie obj = getNewTransientHisBijhautorisatie(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
