// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.data.autaut;

import java.math.BigDecimal;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import nl.bzk.brp.model.data.autaut.Autorisatiebesluit;
import nl.bzk.brp.model.data.autaut.AutorisatiebesluitDataOnDemand;
import nl.bzk.brp.model.data.autaut.Beperkingpopulatie;
import nl.bzk.brp.model.data.autaut.BeperkingpopulatieDataOnDemand;
import nl.bzk.brp.model.data.autaut.Bijhautorisatie;
import nl.bzk.brp.model.data.autaut.BijhautorisatieDataOnDemand;
import nl.bzk.brp.model.data.autaut.Srtbijhouding;
import nl.bzk.brp.model.data.autaut.SrtbijhoudingDataOnDemand;
import nl.bzk.brp.model.data.autaut.Toestand;
import nl.bzk.brp.model.data.autaut.ToestandDataOnDemand;
import nl.bzk.brp.model.data.kern.Partij;
import nl.bzk.brp.model.data.kern.PartijDataOnDemand;
import nl.bzk.brp.model.data.kern.Srtpartij;
import nl.bzk.brp.model.data.kern.SrtpartijDataOnDemand;
import nl.bzk.brp.model.data.kern.Verantwoordelijke;
import nl.bzk.brp.model.data.kern.VerantwoordelijkeDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect BijhautorisatieDataOnDemand_Roo_DataOnDemand {
    
    declare @type: BijhautorisatieDataOnDemand: @Component;
    
    private Random BijhautorisatieDataOnDemand.rnd = new SecureRandom();
    
    private List<Bijhautorisatie> BijhautorisatieDataOnDemand.data;
    
    @Autowired
    private BeperkingpopulatieDataOnDemand BijhautorisatieDataOnDemand.beperkingpopulatieDataOnDemand;
    
    @Autowired
    private AutorisatiebesluitDataOnDemand BijhautorisatieDataOnDemand.autorisatiebesluitDataOnDemand;
    
    @Autowired
    private PartijDataOnDemand BijhautorisatieDataOnDemand.partijDataOnDemand;
    
    @Autowired
    private SrtpartijDataOnDemand BijhautorisatieDataOnDemand.srtpartijDataOnDemand;
    
    @Autowired
    private SrtbijhoudingDataOnDemand BijhautorisatieDataOnDemand.srtbijhoudingDataOnDemand;
    
    @Autowired
    private ToestandDataOnDemand BijhautorisatieDataOnDemand.toestandDataOnDemand;
    
    @Autowired
    private VerantwoordelijkeDataOnDemand BijhautorisatieDataOnDemand.verantwoordelijkeDataOnDemand;
    
    public Bijhautorisatie BijhautorisatieDataOnDemand.getNewTransientBijhautorisatie(int index) {
        Bijhautorisatie obj = new Bijhautorisatie();
        setBeperkingpopulatie(obj, index);
        setBijhautorisatiebesluit(obj, index);
        setBijhautorisatiestatushis(obj, index);
        setDateinde(obj, index);
        setDatingang(obj, index);
        setGeautoriseerdepartij(obj, index);
        setGeautoriseerdesrtpartij(obj, index);
        setOms(obj, index);
        setSrtbijhouding(obj, index);
        setToestand(obj, index);
        setVerantwoordelijke(obj, index);
        return obj;
    }
    
    public void BijhautorisatieDataOnDemand.setBeperkingpopulatie(Bijhautorisatie obj, int index) {
        Beperkingpopulatie beperkingpopulatie = beperkingpopulatieDataOnDemand.getRandomBeperkingpopulatie();
        obj.setBeperkingpopulatie(beperkingpopulatie);
    }
    
    public void BijhautorisatieDataOnDemand.setBijhautorisatiebesluit(Bijhautorisatie obj, int index) {
        Autorisatiebesluit bijhautorisatiebesluit = autorisatiebesluitDataOnDemand.getRandomAutorisatiebesluit();
        obj.setBijhautorisatiebesluit(bijhautorisatiebesluit);
    }
    
    public void BijhautorisatieDataOnDemand.setBijhautorisatiestatushis(Bijhautorisatie obj, int index) {
        String bijhautorisatiestatushis = String.valueOf(index);
        if (bijhautorisatiestatushis.length() > 1) {
            bijhautorisatiestatushis = bijhautorisatiestatushis.substring(0, 1);
        }
        obj.setBijhautorisatiestatushis(bijhautorisatiestatushis);
    }
    
    public void BijhautorisatieDataOnDemand.setDateinde(Bijhautorisatie obj, int index) {
        BigDecimal dateinde = BigDecimal.valueOf(index);
        obj.setDateinde(dateinde);
    }
    
    public void BijhautorisatieDataOnDemand.setDatingang(Bijhautorisatie obj, int index) {
        BigDecimal datingang = BigDecimal.valueOf(index);
        obj.setDatingang(datingang);
    }
    
    public void BijhautorisatieDataOnDemand.setGeautoriseerdepartij(Bijhautorisatie obj, int index) {
        Partij geautoriseerdepartij = partijDataOnDemand.getRandomPartij();
        obj.setGeautoriseerdepartij(geautoriseerdepartij);
    }
    
    public void BijhautorisatieDataOnDemand.setGeautoriseerdesrtpartij(Bijhautorisatie obj, int index) {
        Srtpartij geautoriseerdesrtpartij = srtpartijDataOnDemand.getRandomSrtpartij();
        obj.setGeautoriseerdesrtpartij(geautoriseerdesrtpartij);
    }
    
    public void BijhautorisatieDataOnDemand.setOms(Bijhautorisatie obj, int index) {
        String oms = "oms_" + index;
        if (oms.length() > 250) {
            oms = oms.substring(0, 250);
        }
        obj.setOms(oms);
    }
    
    public void BijhautorisatieDataOnDemand.setSrtbijhouding(Bijhautorisatie obj, int index) {
        Srtbijhouding srtbijhouding = srtbijhoudingDataOnDemand.getRandomSrtbijhouding();
        obj.setSrtbijhouding(srtbijhouding);
    }
    
    public void BijhautorisatieDataOnDemand.setToestand(Bijhautorisatie obj, int index) {
        Toestand toestand = toestandDataOnDemand.getRandomToestand();
        obj.setToestand(toestand);
    }
    
    public void BijhautorisatieDataOnDemand.setVerantwoordelijke(Bijhautorisatie obj, int index) {
        Verantwoordelijke verantwoordelijke = verantwoordelijkeDataOnDemand.getRandomVerantwoordelijke();
        obj.setVerantwoordelijke(verantwoordelijke);
    }
    
    public Bijhautorisatie BijhautorisatieDataOnDemand.getSpecificBijhautorisatie(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Bijhautorisatie obj = data.get(index);
        Short id = obj.getId();
        return Bijhautorisatie.findBijhautorisatie(id);
    }
    
    public Bijhautorisatie BijhautorisatieDataOnDemand.getRandomBijhautorisatie() {
        init();
        Bijhautorisatie obj = data.get(rnd.nextInt(data.size()));
        Short id = obj.getId();
        return Bijhautorisatie.findBijhautorisatie(id);
    }
    
    public boolean BijhautorisatieDataOnDemand.modifyBijhautorisatie(Bijhautorisatie obj) {
        return false;
    }
    
    public void BijhautorisatieDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Bijhautorisatie.findBijhautorisatieEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Bijhautorisatie' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Bijhautorisatie>();
        for (int i = 0; i < 10; i++) {
            Bijhautorisatie obj = getNewTransientBijhautorisatie(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
