// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.data.kern;

import java.math.BigDecimal;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import nl.bzk.brp.model.data.kern.Actie;
import nl.bzk.brp.model.data.kern.ActieDataOnDemand;
import nl.bzk.brp.model.data.kern.Adellijketitel;
import nl.bzk.brp.model.data.kern.AdellijketitelDataOnDemand;
import nl.bzk.brp.model.data.kern.HisPerssamengesteldenaam;
import nl.bzk.brp.model.data.kern.HisPerssamengesteldenaamDataOnDemand;
import nl.bzk.brp.model.data.kern.Pers;
import nl.bzk.brp.model.data.kern.PersDataOnDemand;
import nl.bzk.brp.model.data.kern.Predikaat;
import nl.bzk.brp.model.data.kern.PredikaatDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect HisPerssamengesteldenaamDataOnDemand_Roo_DataOnDemand {
    
    declare @type: HisPerssamengesteldenaamDataOnDemand: @Component;
    
    private Random HisPerssamengesteldenaamDataOnDemand.rnd = new SecureRandom();
    
    private List<HisPerssamengesteldenaam> HisPerssamengesteldenaamDataOnDemand.data;
    
    @Autowired
    private ActieDataOnDemand HisPerssamengesteldenaamDataOnDemand.actieDataOnDemand;
    
    @Autowired
    private AdellijketitelDataOnDemand HisPerssamengesteldenaamDataOnDemand.adellijketitelDataOnDemand;
    
    @Autowired
    private PersDataOnDemand HisPerssamengesteldenaamDataOnDemand.persDataOnDemand;
    
    @Autowired
    private PredikaatDataOnDemand HisPerssamengesteldenaamDataOnDemand.predikaatDataOnDemand;
    
    public HisPerssamengesteldenaam HisPerssamengesteldenaamDataOnDemand.getNewTransientHisPerssamengesteldenaam(int index) {
        HisPerssamengesteldenaam obj = new HisPerssamengesteldenaam();
        setActieaanpgel(obj, index);
        setActieinh(obj, index);
        setActieverval(obj, index);
        setAdellijketitel(obj, index);
        setDataanvgel(obj, index);
        setDateindegel(obj, index);
        setGeslnaam(obj, index);
        setIndalgoritmischafgeleid(obj, index);
        setIndnreeksalsgeslnaam(obj, index);
        setPers(obj, index);
        setPredikaat(obj, index);
        setScheidingsteken(obj, index);
        setTsreg(obj, index);
        setTsverval(obj, index);
        setVoornamen(obj, index);
        setVoorvoegsel(obj, index);
        return obj;
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setActieaanpgel(HisPerssamengesteldenaam obj, int index) {
        Actie actieaanpgel = actieDataOnDemand.getRandomActie();
        obj.setActieaanpgel(actieaanpgel);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setActieinh(HisPerssamengesteldenaam obj, int index) {
        Actie actieinh = actieDataOnDemand.getRandomActie();
        obj.setActieinh(actieinh);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setActieverval(HisPerssamengesteldenaam obj, int index) {
        Actie actieverval = actieDataOnDemand.getRandomActie();
        obj.setActieverval(actieverval);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setAdellijketitel(HisPerssamengesteldenaam obj, int index) {
        Adellijketitel adellijketitel = adellijketitelDataOnDemand.getRandomAdellijketitel();
        obj.setAdellijketitel(adellijketitel);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setDataanvgel(HisPerssamengesteldenaam obj, int index) {
        BigDecimal dataanvgel = BigDecimal.valueOf(index);
        obj.setDataanvgel(dataanvgel);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setDateindegel(HisPerssamengesteldenaam obj, int index) {
        BigDecimal dateindegel = BigDecimal.valueOf(index);
        obj.setDateindegel(dateindegel);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setGeslnaam(HisPerssamengesteldenaam obj, int index) {
        String geslnaam = "geslnaam_" + index;
        if (geslnaam.length() > 200) {
            geslnaam = geslnaam.substring(0, 200);
        }
        obj.setGeslnaam(geslnaam);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setIndalgoritmischafgeleid(HisPerssamengesteldenaam obj, int index) {
        Boolean indalgoritmischafgeleid = true;
        obj.setIndalgoritmischafgeleid(indalgoritmischafgeleid);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setIndnreeksalsgeslnaam(HisPerssamengesteldenaam obj, int index) {
        Boolean indnreeksalsgeslnaam = true;
        obj.setIndnreeksalsgeslnaam(indnreeksalsgeslnaam);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setPers(HisPerssamengesteldenaam obj, int index) {
        Pers pers = persDataOnDemand.getRandomPers();
        obj.setPers(pers);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setPredikaat(HisPerssamengesteldenaam obj, int index) {
        Predikaat predikaat = predikaatDataOnDemand.getRandomPredikaat();
        obj.setPredikaat(predikaat);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setScheidingsteken(HisPerssamengesteldenaam obj, int index) {
        String scheidingsteken = String.valueOf(index);
        if (scheidingsteken.length() > 1) {
            scheidingsteken = scheidingsteken.substring(0, 1);
        }
        obj.setScheidingsteken(scheidingsteken);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setTsreg(HisPerssamengesteldenaam obj, int index) {
        Date tsreg = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setTsreg(tsreg);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setTsverval(HisPerssamengesteldenaam obj, int index) {
        Date tsverval = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setTsverval(tsverval);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setVoornamen(HisPerssamengesteldenaam obj, int index) {
        String voornamen = "voornamen_" + index;
        if (voornamen.length() > 200) {
            voornamen = voornamen.substring(0, 200);
        }
        obj.setVoornamen(voornamen);
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.setVoorvoegsel(HisPerssamengesteldenaam obj, int index) {
        String voorvoegsel = "voorvoeg_" + index;
        if (voorvoegsel.length() > 10) {
            voorvoegsel = voorvoegsel.substring(0, 10);
        }
        obj.setVoorvoegsel(voorvoegsel);
    }
    
    public HisPerssamengesteldenaam HisPerssamengesteldenaamDataOnDemand.getSpecificHisPerssamengesteldenaam(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        HisPerssamengesteldenaam obj = data.get(index);
        Long id = obj.getId();
        return HisPerssamengesteldenaam.findHisPerssamengesteldenaam(id);
    }
    
    public HisPerssamengesteldenaam HisPerssamengesteldenaamDataOnDemand.getRandomHisPerssamengesteldenaam() {
        init();
        HisPerssamengesteldenaam obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return HisPerssamengesteldenaam.findHisPerssamengesteldenaam(id);
    }
    
    public boolean HisPerssamengesteldenaamDataOnDemand.modifyHisPerssamengesteldenaam(HisPerssamengesteldenaam obj) {
        return false;
    }
    
    public void HisPerssamengesteldenaamDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = HisPerssamengesteldenaam.findHisPerssamengesteldenaamEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'HisPerssamengesteldenaam' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<HisPerssamengesteldenaam>();
        for (int i = 0; i < 10; i++) {
            HisPerssamengesteldenaam obj = getNewTransientHisPerssamengesteldenaam(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
