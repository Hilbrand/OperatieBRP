// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.data.autaut;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import nl.bzk.brp.model.data.autaut.Bijhautorisatie;
import nl.bzk.brp.model.data.autaut.BijhautorisatieDataOnDemand;
import nl.bzk.brp.model.data.autaut.Bijhsituatie;
import nl.bzk.brp.model.data.autaut.BijhsituatieDataOnDemand;
import nl.bzk.brp.model.data.kern.Categoriesrtactie;
import nl.bzk.brp.model.data.kern.CategoriesrtactieDataOnDemand;
import nl.bzk.brp.model.data.kern.Categoriesrtdoc;
import nl.bzk.brp.model.data.kern.CategoriesrtdocDataOnDemand;
import nl.bzk.brp.model.data.kern.Srtactie;
import nl.bzk.brp.model.data.kern.SrtactieDataOnDemand;
import nl.bzk.brp.model.data.kern.Srtdoc;
import nl.bzk.brp.model.data.kern.SrtdocDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect BijhsituatieDataOnDemand_Roo_DataOnDemand {
    
    declare @type: BijhsituatieDataOnDemand: @Component;
    
    private Random BijhsituatieDataOnDemand.rnd = new SecureRandom();
    
    private List<Bijhsituatie> BijhsituatieDataOnDemand.data;
    
    @Autowired
    private BijhautorisatieDataOnDemand BijhsituatieDataOnDemand.bijhautorisatieDataOnDemand;
    
    @Autowired
    private CategoriesrtactieDataOnDemand BijhsituatieDataOnDemand.categoriesrtactieDataOnDemand;
    
    @Autowired
    private CategoriesrtdocDataOnDemand BijhsituatieDataOnDemand.categoriesrtdocDataOnDemand;
    
    @Autowired
    private SrtactieDataOnDemand BijhsituatieDataOnDemand.srtactieDataOnDemand;
    
    @Autowired
    private SrtdocDataOnDemand BijhsituatieDataOnDemand.srtdocDataOnDemand;
    
    public Bijhsituatie BijhsituatieDataOnDemand.getNewTransientBijhsituatie(int index) {
        Bijhsituatie obj = new Bijhsituatie();
        setBijhautorisatie(obj, index);
        setBijhsituatiestatushis(obj, index);
        setCategoriesrtactie(obj, index);
        setCategoriesrtdoc(obj, index);
        setSrtactie(obj, index);
        setSrtdoc(obj, index);
        return obj;
    }
    
    public void BijhsituatieDataOnDemand.setBijhautorisatie(Bijhsituatie obj, int index) {
        Bijhautorisatie bijhautorisatie = bijhautorisatieDataOnDemand.getRandomBijhautorisatie();
        obj.setBijhautorisatie(bijhautorisatie);
    }
    
    public void BijhsituatieDataOnDemand.setBijhsituatiestatushis(Bijhsituatie obj, int index) {
        String bijhsituatiestatushis = String.valueOf(index);
        if (bijhsituatiestatushis.length() > 1) {
            bijhsituatiestatushis = bijhsituatiestatushis.substring(0, 1);
        }
        obj.setBijhsituatiestatushis(bijhsituatiestatushis);
    }
    
    public void BijhsituatieDataOnDemand.setCategoriesrtactie(Bijhsituatie obj, int index) {
        Categoriesrtactie categoriesrtactie = categoriesrtactieDataOnDemand.getRandomCategoriesrtactie();
        obj.setCategoriesrtactie(categoriesrtactie);
    }
    
    public void BijhsituatieDataOnDemand.setCategoriesrtdoc(Bijhsituatie obj, int index) {
        Categoriesrtdoc categoriesrtdoc = categoriesrtdocDataOnDemand.getRandomCategoriesrtdoc();
        obj.setCategoriesrtdoc(categoriesrtdoc);
    }
    
    public void BijhsituatieDataOnDemand.setSrtactie(Bijhsituatie obj, int index) {
        Srtactie srtactie = srtactieDataOnDemand.getRandomSrtactie();
        obj.setSrtactie(srtactie);
    }
    
    public void BijhsituatieDataOnDemand.setSrtdoc(Bijhsituatie obj, int index) {
        Srtdoc srtdoc = srtdocDataOnDemand.getRandomSrtdoc();
        obj.setSrtdoc(srtdoc);
    }
    
    public Bijhsituatie BijhsituatieDataOnDemand.getSpecificBijhsituatie(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Bijhsituatie obj = data.get(index);
        Integer id = obj.getId();
        return Bijhsituatie.findBijhsituatie(id);
    }
    
    public Bijhsituatie BijhsituatieDataOnDemand.getRandomBijhsituatie() {
        init();
        Bijhsituatie obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getId();
        return Bijhsituatie.findBijhsituatie(id);
    }
    
    public boolean BijhsituatieDataOnDemand.modifyBijhsituatie(Bijhsituatie obj) {
        return false;
    }
    
    public void BijhsituatieDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Bijhsituatie.findBijhsituatieEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Bijhsituatie' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Bijhsituatie>();
        for (int i = 0; i < 10; i++) {
            Bijhsituatie obj = getNewTransientBijhsituatie(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
