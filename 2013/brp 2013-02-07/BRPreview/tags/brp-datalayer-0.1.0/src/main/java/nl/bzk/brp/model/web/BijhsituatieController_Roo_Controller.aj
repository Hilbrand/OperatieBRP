// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.bzk.brp.model.web;

import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import nl.bzk.brp.model.data.autaut.Bijhautorisatie;
import nl.bzk.brp.model.data.autaut.Bijhsituatie;
import nl.bzk.brp.model.data.autaut.HisBijhsituatie;
import nl.bzk.brp.model.data.kern.Categoriesrtactie;
import nl.bzk.brp.model.data.kern.Categoriesrtdoc;
import nl.bzk.brp.model.data.kern.Srtactie;
import nl.bzk.brp.model.data.kern.Srtdoc;
import nl.bzk.brp.model.web.BijhsituatieController;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect BijhsituatieController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST, produces = "text/html")
    public String BijhsituatieController.create(@Valid Bijhsituatie bijhsituatie, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, bijhsituatie);
            return "bijhsituaties/create";
        }
        uiModel.asMap().clear();
        bijhsituatie.persist();
        return "redirect:/bijhsituaties/" + encodeUrlPathSegment(bijhsituatie.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", produces = "text/html")
    public String BijhsituatieController.createForm(Model uiModel) {
        populateEditForm(uiModel, new Bijhsituatie());
        return "bijhsituaties/create";
    }
    
    @RequestMapping(value = "/{id}", produces = "text/html")
    public String BijhsituatieController.show(@PathVariable("id") Integer id, Model uiModel) {
        uiModel.addAttribute("bijhsituatie", Bijhsituatie.findBijhsituatie(id));
        uiModel.addAttribute("itemId", id);
        return "bijhsituaties/show";
    }
    
    @RequestMapping(produces = "text/html")
    public String BijhsituatieController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("bijhsituaties", Bijhsituatie.findBijhsituatieEntries(firstResult, sizeNo));
            float nrOfPages = (float) Bijhsituatie.countBijhsituaties() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("bijhsituaties", Bijhsituatie.findAllBijhsituaties());
        }
        return "bijhsituaties/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT, produces = "text/html")
    public String BijhsituatieController.update(@Valid Bijhsituatie bijhsituatie, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, bijhsituatie);
            return "bijhsituaties/update";
        }
        uiModel.asMap().clear();
        bijhsituatie.merge();
        return "redirect:/bijhsituaties/" + encodeUrlPathSegment(bijhsituatie.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{id}", params = "form", produces = "text/html")
    public String BijhsituatieController.updateForm(@PathVariable("id") Integer id, Model uiModel) {
        populateEditForm(uiModel, Bijhsituatie.findBijhsituatie(id));
        return "bijhsituaties/update";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, produces = "text/html")
    public String BijhsituatieController.delete(@PathVariable("id") Integer id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        Bijhsituatie bijhsituatie = Bijhsituatie.findBijhsituatie(id);
        bijhsituatie.remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/bijhsituaties";
    }
    
    void BijhsituatieController.populateEditForm(Model uiModel, Bijhsituatie bijhsituatie) {
        uiModel.addAttribute("bijhsituatie", bijhsituatie);
        uiModel.addAttribute("bijhautorisaties", Bijhautorisatie.findAllBijhautorisaties());
        uiModel.addAttribute("hisbijhsituaties", HisBijhsituatie.findAllHisBijhsituaties());
        uiModel.addAttribute("categoriesrtacties", Categoriesrtactie.findAllCategoriesrtacties());
        uiModel.addAttribute("categoriesrtdocs", Categoriesrtdoc.findAllCategoriesrtdocs());
        uiModel.addAttribute("srtacties", Srtactie.findAllSrtacties());
        uiModel.addAttribute("srtdocs", Srtdoc.findAllSrtdocs());
    }
    
    String BijhsituatieController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
