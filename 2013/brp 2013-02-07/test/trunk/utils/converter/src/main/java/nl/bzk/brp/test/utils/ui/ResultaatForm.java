/**
 * This file is copyright 2017 State of the Netherlands (Ministry of Interior Affairs and Kingdom Relations).
 * It is made available under the terms of the GNU Affero General Public License, version 3 as published by the Free Software Foundation.
 * The project of which this file is part, may be found at https://github.com/MinBZK/operatieBRP.
 */

package nl.bzk.brp.test.utils.ui;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import nl.bzk.brp.test.utils.ConverterCase;
import nl.bzk.brp.test.utils.ConverterResultaat;
import nl.bzk.brp.test.utils.ResultaatRegel;

/**
 * Created with IntelliJ IDEA.
 * User: Erik
 * Date: 2-1-13
 * Time: 12:09
 * To change this template use File | Settings | File Templates.
 */
public class ResultaatForm extends JFrame {

    private static final long serialVersionUID = 1L;

    private JPanel mainPanel;
    private JScrollPane defaultBestaansrechtPane;
    private JScrollPane defaultGeenBestaansrechtPane;
    private JScrollPane structuurPane;
    private JScrollPane structuurFailedPane;
    private JScrollPane mappingPane;
    private JScrollPane mappingFailedPane;
    private JScrollPane sameXpathPane;
    private JScrollPane nieuwPane;
    private JScrollPane notFoundPane;
    private JScrollPane neverFoundPane;

    public ResultaatForm() {
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setViewportView(this.mainPanel);
        this.getContentPane().add(scrollPane);
        this.setSize(1000, 900);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public void vulTabellen(final ConverterResultaat resultaat) {
        if (resultaat != null) {
            this.vulTabel(this.defaultBestaansrechtPane, resultaat.getResultaten(ConverterCase.DEFAULT_BESTAANSRECHT));
            this.vulTabel(this.defaultGeenBestaansrechtPane, resultaat.getResultaten(ConverterCase.DEFAULT_GEEN_BESTAANSRECHT));
            this.vulTabel(this.structuurPane, resultaat.getResultaten(ConverterCase.STRUCTUUR));
            this.vulTabel(this.structuurFailedPane, resultaat.getResultaten(ConverterCase.STRUCTUUR_NO_MATCH));
            this.vulTabel(this.mappingPane, resultaat.getResultaten(ConverterCase.MAPPING));
            this.vulTabel(this.mappingFailedPane, resultaat.getResultaten(ConverterCase.MAPPING_FAILED));
            this.vulTabel(this.sameXpathPane, resultaat.getResultaten(ConverterCase.SAME_XPATH));
            this.vulTabel(this.nieuwPane, resultaat.getResultaten(ConverterCase.NEW));
            this.vulTabel(this.notFoundPane, resultaat.getResultaten(ConverterCase.NOT_FOUND));
            this.vulTabel(this.neverFoundPane, filterNeverFound(resultaat));
        }
    }

    private List<ResultaatRegel> filterNeverFound(final ConverterResultaat resultaat) {
        List<ResultaatRegel> notFoundRegels = resultaat.getResultaten(ConverterCase.NOT_FOUND);
        List<ResultaatRegel> neverFoundRegels = new ArrayList<ResultaatRegel>();
        for (ResultaatRegel notFoundRegel : notFoundRegels) {
            if (telVoorkomens(notFoundRegel, notFoundRegels) == resultaat.getAantalBestandenGeconverteerd()
                    && !neverFoundRegels.contains(notFoundRegel)) {
                neverFoundRegels.add(notFoundRegel);
            }
        }
        return neverFoundRegels;
    }
    
    private int telVoorkomens(final ResultaatRegel regel, final List<ResultaatRegel> regels) {
        int aantal = 0;
        for (ResultaatRegel eenRegel : regels) {
            if (eenRegel.equals(regel)) {
                aantal++;
            }
        }
        return aantal;
    }

    private void vulTabel(final JScrollPane pane, final List<ResultaatRegel> regels) {
        Object[] columnNames = new String[] {"XPath", "Waarde"};
        Object[][] rowData = new Object[regels.size()][2];
        for (int index = 0; index < regels.size(); index++) {
            ResultaatRegel resultaatRegel = regels.get(index);
            rowData[index][0] = resultaatRegel.getXpath();
            rowData[index][1] = resultaatRegel.getWaarde();
        }
        JTable tabel = new JTable(rowData, columnNames);
        tabel.getColumnModel().getColumn(0).setPreferredWidth(700);
        pane.setViewportView(tabel);
    }

    {
        // Was gegenereerd door IDEA, is nu handmatig in beheer.
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        
        final JLabel label6 = new JLabel();
        label6.setText("Default waarde toegekend, MET bestaansrecht");
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label6, gbc);

        defaultBestaansrechtPane= new JScrollPane();
        defaultBestaansrechtPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 99;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(defaultBestaansrechtPane, gbc);

        final JLabel label16 = new JLabel();
        label16.setText("Default waarde toegekend, ZONDER bestaansrecht");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label16, gbc);

        defaultGeenBestaansrechtPane = new JScrollPane();
        defaultGeenBestaansrechtPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 99;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(defaultGeenBestaansrechtPane, gbc);
        
        final JLabel label11 = new JLabel();
        label11.setText("Structuur mapping toegepast");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label11, gbc);
        structuurPane = new JScrollPane();
        structuurPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(structuurPane, gbc);
        final JLabel label12 = new JLabel();
        label12.setText("Structuur mapping gedefinieerd, maar geen resultaat gevonden, NIET verwijderd (misschien in mapping aanwezig)");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label12, gbc);
        structuurFailedPane = new JScrollPane();
        structuurFailedPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(structuurFailedPane, gbc);
        
        final JLabel label1 = new JLabel();
        label1.setText("Mapping nieuw naar oud toegepast");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label1, gbc);
        mappingPane = new JScrollPane();
        mappingPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(mappingPane, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Mapping gedefinieerd, maar geen resultaat gevonden, NIET verwijderd (misschien in default aanwezig)");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 10;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label2, gbc);
        mappingFailedPane = new JScrollPane();
        mappingFailedPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 11;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(mappingFailedPane, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Identieke XPath gevonden in nieuw en oud");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 12;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label3, gbc);
        sameXpathPane = new JScrollPane();
        sameXpathPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 13;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(sameXpathPane, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Als nieuwe inhoud gedefinieerd");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 14;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label4, gbc);
        nieuwPane = new JScrollPane();
        nieuwPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 15;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(nieuwPane, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Geen enkele match gevonden, verwijderd");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 16;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label5, gbc);
        notFoundPane = new JScrollPane();
        notFoundPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 17;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(notFoundPane, gbc);
        
        final JLabel label7 = new JLabel();
        label7.setText("In geen enkele input file een match gevonden.");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 18;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainPanel.add(label7, gbc);
        neverFoundPane = new JScrollPane();
        neverFoundPane.setMinimumSize(new Dimension(900, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 19;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(neverFoundPane, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
