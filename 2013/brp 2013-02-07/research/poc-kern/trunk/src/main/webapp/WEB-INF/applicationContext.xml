<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxws="http://cxf.apache.org/jaxws"

	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/aop 
     		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
				http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        ">

  <import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />


<!-- 
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:kern.properties</value>
		</property>
	</bean>
 -->
 	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>file:${catalina.home}/webapps/kern.properties
			</value>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${brp.kern.jdbc.driver}" />
		<property name="url" value="${brp.kern.jdbc.url}" />
		<property name="username" value="${brp.kern.jdbc.username}" />
		<property name="password" value="${brp.kern.jdbc.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
		<property name="minEvictableIdleTimeMillis" value="60000" />
		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>

	<jdbc:initialize-database data-source="dataSource" ignore-failures="NONE" >
		<jdbc:script location="classpath:kern.sql" />
	</jdbc:initialize-database>

	<context:annotation-config />
	<context:component-scan base-package="nl.bzk.brp.kern.service" />
	<context:component-scan base-package="nl.bzk.brp.kern.ws" />

	<jpa:repositories base-package="nl.bzk.brp.kern.repositories" entity-manager-factory-ref="entityManagerFactory" />

	<task:annotation-driven />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="kern" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>

	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
		<property name="generateDdl" value="true" />
		<property name="database" value="POSTGRESQL" />
		<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect" ref="jpaDialect" />
		<property name="defaultTimeout" value="15" />
	</bean>

	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<bean id="log" class="org.springframework.beans.factory.config.CommonsLogFactoryBean">
		<property name="logName" value="nl.bzk.brp.kern" />
	</bean>
	
	<bean id="wss4jInInterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
		<constructor-arg>
			<map>
				<entry key="action" value="Timestamp Signature"/>
				<entry key="signaturePropFile" value="server_sigpropfile.properties"/>
			</map>
		</constructor-arg>
	</bean>

	<bean id="myPasswordCallback" class="nl.bzk.brp.kern.service.ServerPasswordCallback"/>
	
	<bean id="wss4jOutInterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
		<constructor-arg>
			<map>
				<entry key="action" value="Timestamp Signature"/>
				<entry key="user" value="serverkey"/>
				<entry key="signaturePropFile" value="client_sigpropfile.properties"/>
				<entry key="passwordCallbackRef">
					<ref bean="myPasswordCallback"/>
				</entry>
			</map>
		</constructor-arg>
	</bean>
	
	<jaxws:endpoint implementor="#BewerkenNationaliteitGeneriek" address="/bewerkennationaliteit">
		<jaxws:properties>
			<entry key="schema-validation-enabled" value="true" />
		</jaxws:properties>
		<jaxws:features>
		<!-- ff uit voor speedtest
			<cxf:logging xmlns:cxf="http://cxf.apache.org/core" />
			<wsa:addressing xmlns:wsa="http://cxf.apache.org/ws/addressing" allowDuplicates="true" />
			-->
		</jaxws:features>
		
		<jaxws:inInterceptors>
			<ref bean="wss4jInInterceptor"/>
    </jaxws:inInterceptors>
    
		<jaxws:outInterceptors>
			<ref bean="wss4jOutInterceptor"/>
    </jaxws:outInterceptors>
    
	</jaxws:endpoint>

 	
</beans>
	 
 
	

 