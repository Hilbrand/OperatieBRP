<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    ">

    <tx:annotation-driven />
    <context:property-placeholder/>

    <context:component-scan base-package="nl.bzk.migratiebrp.init.naarbrp" />

    <bean id="destinationManager" class="com.mockrunner.jms.DestinationManager"/>
    <bean id="configurationManager" class="com.mockrunner.jms.ConfigurationManager"/>

    <bean id="jmsConnectionFactory" class="com.mockrunner.mock.jms.MockQueueConnectionFactory" >
        <constructor-arg index="0" ref="destinationManager" />
        <constructor-arg index="1" ref="configurationManager" />
    </bean>

    <bean name="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="destination" factory-bean="destinationManager" factory-method="createQueue">
        <constructor-arg index="0" value="/queue/init.vulling.naarlo3" />
    </bean>

    <bean id="embeddedHsqlDatabaseServer" class="org.hsqldb.server.Server" init-method="start" destroy-method="stop" >
        <property name="port" value="9043" />
        <property name="properties">
            <bean class="org.hsqldb.persist.HsqlProperties">
                <constructor-arg>
                    <props>
                        <prop key="hsqldb.reconfig_logging">false</prop>
                        <prop key="server.database.1">file:target/hsqldb/gbav</prop>
                        <prop key="server.dbname.1">gbav</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    
    <bean id="init-runtime-datasource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" depends-on="embeddedHsqlDatabaseServer">
        <property name="uniqueResourceName">
            <!--
           | Tijdens jUnit testen kan de ApplicationContext meerdere keren worden geinstantieerd.
           | Elke keer dient een unique naam gebruikt te worden, anders gaat Atomikos fout.
            -->
            <bean class="nl.bzk.migratiebrp.util.common.UniqueName">
                <property name="baseName" value="initDatabase"/>
            </bean>
        </property>
        <property name="driverClassName" value="org.hsqldb.jdbc.JDBCDriver"/>
        <property name="url" value="jdbc:hsqldb:hsql://localhost:9043/GBAV"/>

        <property name="user" value="sa"/>
        <property name="password" value=""/>

        <property name="minPoolSize" value="3"/>
        <property name="maxPoolSize" value="20"/>
    </bean>

    <jdbc:initialize-database data-source="init-runtime-datasource" ignore-failures="ALL">
        <jdbc:script location="classpath:sql/hsqldb/createInitVullingTables.sql" />
        <jdbc:script location="classpath:sql/insertGbavResult.sql" />
        <jdbc:script location="classpath:sql/insertGbavResultAut.sql" />
        <jdbc:script location="classpath:sql/insertGbavResultAfnInd.sql" />
        <jdbc:script location="classpath:sql/insertGbavResultAfnIndStapel.sql" />
        <jdbc:script location="classpath:sql/insertGbavResultAfnIndRegel.sql" />
    </jdbc:initialize-database>

    <bean id="atomikosSystemProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="java.lang.System" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
        	<props>
                <prop key="com.atomikos.icatch.no_file">true</prop>
                <prop key="com.atomikos.icatch.hide_init_file_path">false</prop>
	            <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
            </props>
        </property>
    </bean>

    <bean id="atomikosUserTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp" init-method="init" destroy-method="shutdownForce" depends-on="atomikosSystemProperties">
        <constructor-arg>
            <props>
                <prop key="com.atomikos.icatch.max_timeout">${atomikos.max.timeout:300000}</prop>
                <prop key="com.atomikos.icatch.default_jta_timeout">${atomikos.default.timeout:30000}</prop>
                <prop key="com.atomikos.icatch.max_actives">${atomikos.max.actives:50}</prop>
                <prop key="com.atomikos.icatch.enable_logging">true</prop>
                <prop key="com.atomikos.icatch.tm_unique_name">${atomikos.unique.name:init-runtime}-</prop>
                <prop key="com.atomikos.icatch.serial_jta_transactions">false</prop>
                <prop key="com.atomikos.icatch.force_shutdown_on_vm_exit">false</prop>
                <prop key="com.atomikos.icatch.log_base_name">${atomikos.unique.name:init-runtime}-tmlog-</prop>
                <prop key="com.atomikos.icatch.log_base_dir">${atomikos.base.dir:work/atomikos}</prop>
                <prop key="com.atomikos.icatch.checkpoint_interval">500</prop>
                <prop key="com.atomikos.icatch.threaded_2pc">true</prop>
            </props>
        </constructor-arg>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close"  depends-on="atomikosUserTransactionService">
       <property name="startupTransactionService" value="false"/>
       <property name="forceShutdown" value="true" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="atomikosUserTransactionService">
    </bean>

    <bean name="init-runtime-transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction"  />
    </bean>
    
    <import resource="excel-adapter-beans.xml" />
</beans>
