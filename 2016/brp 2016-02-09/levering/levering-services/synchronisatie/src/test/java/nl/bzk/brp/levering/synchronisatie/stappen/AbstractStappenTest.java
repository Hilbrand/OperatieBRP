/**
 * This file is copyright 2017 State of the Netherlands (Ministry of Interior Affairs and Kingdom Relations).
 * It is made available under the terms of the GNU Affero General Public License, version 3 as published by the Free Software Foundation.
 * The project of which this file is part, may be found at https://github.com/MinBZK/operatieBRP.
 */

package nl.bzk.brp.levering.synchronisatie.stappen;

import java.util.ArrayList;
import nl.bzk.brp.levering.synchronisatie.dto.synchronisatie.SynchronisatieBerichtContext;
import nl.bzk.brp.levering.synchronisatie.dto.synchronisatie.SynchronisatieResultaat;
import nl.bzk.brp.model.algemeen.attribuuttype.ber.SysteemNaamAttribuut;
import nl.bzk.brp.model.algemeen.attribuuttype.kern.BurgerservicenummerAttribuut;
import nl.bzk.brp.model.algemeen.attribuuttype.kern.ReferentienummerAttribuut;
import nl.bzk.brp.model.algemeen.stamgegeven.autaut.Leveringsautorisatie;
import nl.bzk.brp.model.algemeen.stamgegeven.autaut.LeveringsautorisatieAttribuut;
import nl.bzk.brp.model.algemeen.stamgegeven.kern.SoortAdministratieveHandeling;
import nl.bzk.brp.model.algemeen.stamgegeven.kern.SoortAdministratieveHandelingAttribuut;
import nl.bzk.brp.model.algemeen.stamgegeven.kern.TestPartijBuilder;
import nl.bzk.brp.model.bericht.ber.BerichtParametersGroepBericht;
import nl.bzk.brp.model.bericht.ber.BerichtStandaardGroepBericht;
import nl.bzk.brp.model.bericht.ber.BerichtStuurgegevensGroepBericht;
import nl.bzk.brp.model.bericht.ber.BerichtZoekcriteriaPersoonGroepBericht;
import nl.bzk.brp.model.bericht.kern.AdministratieveHandelingBericht;
import nl.bzk.brp.model.bericht.kern.HandelingSynchronisatiePersoonBericht;
import nl.bzk.brp.model.operationeel.kern.AdministratieveHandelingModel;
import nl.bzk.brp.model.synchronisatie.GeefSynchronisatiePersoonBericht;
import nl.bzk.brp.model.validatie.Melding;
import nl.bzk.brp.util.StatischeObjecttypeBuilder;
import nl.bzk.brp.util.testpersoonbouwers.TestPersoonJohnnyJordaan;
import nl.bzk.brp.webservice.business.stappen.BerichtenIds;
import org.apache.commons.lang.StringUtils;
import org.junit.Before;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.Spy;

public abstract class AbstractStappenTest {

    @Spy
    private GeefSynchronisatiePersoonBericht onderwerp = new GeefSynchronisatiePersoonBericht();

    private SynchronisatieBerichtContext berichtContext;

    @Spy
    private SynchronisatieResultaat resultaat = new SynchronisatieResultaat(new ArrayList<Melding>(0));

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    protected void maakBericht(final Integer bsn, final Leveringsautorisatie leveringautorisatie, final Integer zendendePartijCode,
        final String zendendeSysteemNaam)
    {
        final BerichtZoekcriteriaPersoonGroepBericht criteria = new BerichtZoekcriteriaPersoonGroepBericht();
        onderwerp.setZoekcriteriaPersoon(criteria);

        final BerichtStuurgegevensGroepBericht stuurgegevens = new BerichtStuurgegevensGroepBericht();
        onderwerp.setStuurgegevens(stuurgegevens);

        final BerichtParametersGroepBericht parameters = new BerichtParametersGroepBericht();
        onderwerp.setParameters(parameters);

        onderwerp.getZoekcriteriaPersoon().setBurgerservicenummer(new BurgerservicenummerAttribuut(bsn));
        onderwerp.getParameters().setLeveringsautorisatie(new LeveringsautorisatieAttribuut(leveringautorisatie));
        onderwerp.getParameters().setLeveringsautorisatieID(leveringautorisatie.getID().toString());

        onderwerp.getStuurgegevens().setZendendePartijCode(StringUtils.leftPad(zendendePartijCode.toString(), 6, '0'));
        onderwerp.getStuurgegevens().setZendendePartij(
            StatischeObjecttypeBuilder.bouwPartij(zendendePartijCode, "TestPartij"));
        onderwerp.getStuurgegevens().setZendendeSysteem(new SysteemNaamAttribuut(zendendeSysteemNaam));
        onderwerp.getStuurgegevens().setReferentienummer(
            new ReferentienummerAttribuut("000000F-0000-0000-0000-00000000000A"));

        final AdministratieveHandelingBericht administratieveHandeling = new HandelingSynchronisatiePersoonBericht();
        final BerichtStandaardGroepBericht standaardGroep = new BerichtStandaardGroepBericht();
        standaardGroep.setAdministratieveHandeling(administratieveHandeling);
        onderwerp.setStandaard(standaardGroep);

        berichtContext = new SynchronisatieBerichtContext(new BerichtenIds(null, null), TestPartijBuilder.maker().metCode(zendendePartijCode).maak(),
            onderwerp.getStuurgegevens().getReferentienummer().getWaarde(),
            null
        );
        berichtContext = Mockito.spy(berichtContext);
        berichtContext.setPersoonHisVolledig(TestPersoonJohnnyJordaan.maak());
    }

    protected AdministratieveHandelingModel maakAdministratieveHandelingModel() {
        return new AdministratieveHandelingModel(
            new SoortAdministratieveHandelingAttribuut(SoortAdministratieveHandeling.SYNCHRONISATIE_PERSOON),
            onderwerp.getStuurgegevens().getZendendePartij(), null, onderwerp.getAdministratieveHandeling().getTijdstipRegistratie()
        );
    }

    public final GeefSynchronisatiePersoonBericht getOnderwerp() {
        return onderwerp;
    }

    public final SynchronisatieBerichtContext getBerichtContext() {
        return berichtContext;
    }

    public final SynchronisatieResultaat getResultaat() {
        return resultaat;
    }
}
