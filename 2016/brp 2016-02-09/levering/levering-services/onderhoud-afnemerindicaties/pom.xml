<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>nl.bzk.brp.levering.services</groupId>
        <artifactId>brp-levering-services</artifactId>
        <version>96-SNAPSHOT</version>
    </parent>

    <artifactId>brp-levering-services-onderhoud-afnemerindicaties</artifactId>
    <packaging>war</packaging>

    <name>BRP Levering Services - Onderhoud Afnemerindicaties</name>
    <description>Bevat de levering beheer Afnemerindicaties functionaliteit voor afnemers / gemeenten om
        afnemerindicaties te plaatsen en verwijderen.
    </description>

    <properties>
        <docker.build.finalName>brp/onderhoud-afnemerindicaties</docker.build.finalName>
    </properties>

    <dependencies>
        <!-- Compile BRP dependencies -->
        <dependency>
            <groupId>nl.bzk.brp.algemeen.kern</groupId>
            <artifactId>brp-algemeen-kern-stappen</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.bzk.brp.levering.kern</groupId>
            <artifactId>brp-levering-kern-afnemerindicaties</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>nl.bzk.brp.algemeen.model</groupId>
                    <artifactId>brp-algemeen-model-model</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>nl.bzk.brp.algemeen.webservice</groupId>
            <artifactId>brp-algemeen-webservice-business</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.bzk.brp.algemeen.webservice</groupId>
            <artifactId>brp-algemeen-webservice-webservice-basis</artifactId>
        </dependency>

        <!-- DBCP -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>

        <!-- Java EE-->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-security</artifactId>
            <!-- EHcache versie conflict, CXF heeft deze dependency ook in compile scope -->
            <exclusions>
                <exclusion>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-rt-ws-security</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>nl.bzk.brp.algemeen</groupId>
            <artifactId>brp-algemeen-koppelvlak</artifactId>
        </dependency>

        <!-- JMS -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <version>${activemq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-spring</artifactId>
            <version>${activemq.version}</version>
        </dependency>

        <!-- TEST dependencies -->
        <dependency>
            <groupId>nl.bzk.brp.algemeen.webservice</groupId>
            <artifactId>brp-algemeen-webservice-webservice-basis</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.5.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-naming</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-plus</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <!-- Name of the generated WAR file -->
        <finalName>afnemerindicaties</finalName>

        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/resources</directory>
                <excludes>
                    <exclude>**/*.jks</exclude>
                </excludes>
            </testResource>
            <testResource>
                <filtering>false</filtering>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/*.jks</include>
                </includes>
            </testResource>
            <testResource>
                <targetPath>../META-INF</targetPath>
                <directory>${basedir}/src/main/webapp/META-INF</directory>
            </testResource>
            <testResource>
                <targetPath>../WEB-INF</targetPath>
                <directory>${basedir}/src/main/webapp/WEB-INF</directory>
            </testResource>
            <testResource>
                <targetPath>../WEB-INF</targetPath>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/webapp/WEB-INF</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <optimize>true</optimize>
                    <showWarnings>true</showWarnings>
                    <encoding>UTF-8</encoding>
                    <debug>true</debug>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Xms512m -Xmx1024m -XX:MaxPermSize=1024m -XX:PermSize=256m</argLine>
                    <forkMode>always</forkMode>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-portnumbers</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>maven.jetty.port</portName>
                                <portName>maven.jetty.stopport</portName>
                            </portNames>
                            <minPortNumber>8892</minPortNumber>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-resource</id>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/xsd</directory>
                                    <targetPath>xsd</targetPath>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/wsdl</directory>
                                    <targetPath>wsdl</targetPath>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>*.*</include>
                            </includes>
                        </resource>
                    </webResources>
                    <archive>
                        <manifestEntries>
                            <groupId>${project.groupId}</groupId>
                            <version>${project.version}</version>
                            <project-name>${project.name}</project-name>
                            <artifactId>${project.artifactId}</artifactId>
                            <build>${built.on}</build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.14.v20131031</version>
                <configuration>
                    <webApp>
                        <contextPath>/brp</contextPath>
                    </webApp>
                    <webAppSourceDirectory>${basedir}/src/main/webapp</webAppSourceDirectory>
                    <useTestClasspath>true</useTestClasspath>
                    <stopPort>9886</stopPort>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9875</port>
                            <maxIdleTime>15000</maxIdleTime>
                        </connector>
                    </connectors>
                    <webAppConfig>
                        <contextPath>/brp</contextPath>
                        <extraClasspath>${basedir}/target/test-classes/</extraClasspath>
                        <!-- XSD's zijn nodig op het classpath. Voor SchemaValidationHelper class -->
                        <extraClasspath>${basedir}/target/afnemerindicaties/WEB-INF/classes/</extraClasspath>
                    </webAppConfig>
                    <jvmArgs>-Xms512m -Xmx1024m -XX:MaxPermSize=1024m -XX:PermSize=256m</jvmArgs>
                    <systemProperties>
                        <systemProperty>
                            <name>log4j.configuration</name>
                            <value>log4j2.xml</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
            </plugin>
            <!-- TODO: Weet niet zeker of we dit hier ook nodig hebben -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <!-- De phase wordt bewust op het 'late' prepare-package gezet, zodat de aspectj weaving voor Spring
                                 geen (negatieve) invloed heeft op de cobertura coverage meting. -->
                        <phase>prepare-package</phase>
                        <configuration>
                            <source>1.7</source>
                            <target>1.7</target>
                            <aspectLibraries>
                                <aspectLibrary>
                                    <groupId>org.springframework</groupId>
                                    <artifactId>spring-aspects</artifactId>
                                </aspectLibrary>
                            </aspectLibraries>
                            <sources>
                                <source>
                                    <basedir>${project.basedir}/src/main/java</basedir>
                                    <includes>
                                        <include>nl/bzk/brp/business/**/*.java</include>
                                    </includes>
                                </source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <scm>
        <connection>
            scm:svn:https://www.modernodam.nl/svn/brp-code/trunk/levering/levering-services/onderhoud-afnemerindicaties
        </connection>
      <developerConnection>scm:svn:https://www.modernodam.nl/svn/brp-code/trunk/levering/levering-services/brp-levering-services-onderhoud-afnemerindicaties</developerConnection>
  </scm>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>

                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>db.postgresql</name>
                </property>
            </activation>
            <properties>
                <maven.jdbc.driverClassName>org.postgresql.Driver</maven.jdbc.driverClassName>
                <maven.jdbc.url>jdbc:postgresql://${jenkins.postgresql.host}/brp_levering_services_onderhoud_afnemerindicaties</maven.jdbc.url>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-assembly</id>
                                <phase>pre-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-publish</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-tag-image</id>
                                <phase>install</phase>
                            </execution>
                            <execution>
                                <id>docker-push-tag</id>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-tag-image</id>
                                <phase>install</phase>
                            </execution>
                            <execution>
                                <id>docker-push-tag</id>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
