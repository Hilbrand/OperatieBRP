<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>nl.bzk.brp.levering.services</groupId>
        <artifactId>brp-levering-services</artifactId>
        <version>96-SNAPSHOT</version>
    </parent>

    <artifactId>brp-levering-services-mutatielevering</artifactId>
    <packaging>war</packaging>

    <name>BRP Levering Services - Mutatielevering</name>
    <description>BRP mutatie afhandeling service die Administratieve Handelingen verwerkt van een JMS queue en deze
        levert aan afnemers die hierop geabonneerd zijn.</description>

    <properties>
        <!-- profile voor JDBC connecties etc., in maven filter properties bestand (zie /project/build/filters) -->
        <build.profile.id>default</build.profile.id>
        <docker.build.finalName>brp/mutatielevering</docker.build.finalName>
    </properties>

    <dependencies>
        <!-- Compile BRP dependencies -->
        <dependency>
            <groupId>nl.bzk.brp.algemeen.kern</groupId>
            <artifactId>brp-algemeen-kern-stappen</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.bzk.brp.levering.kern</groupId>
            <artifactId>brp-levering-kern-afnemerindicaties</artifactId>
        </dependency>
        <dependency>
            <groupId>nl.bzk.brp.algemeen.webservice</groupId>
            <artifactId>brp-algemeen-webservice-business</artifactId>
        </dependency>


        <dependency>
			<groupId>nl.bzk.brp.gba</groupId>
			<artifactId>brp-gba-conversie</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>nl.bzk.migratiebrp.conversie</groupId>
			<artifactId>migr-conversie-model</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
		</dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-jexl</groupId>
            <artifactId>commons-jexl</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <!-- provide dependencies -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Database driver(s) -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- Performance -->
        <dependency>
            <groupId>org.perf4j</groupId>
            <artifactId>perf4j</artifactId>
            <version>0.9.16</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>mutatielevering</finalName>
        <filters>
            <filter>src/main/filters/junit-main.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.15</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <debug>true</debug>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>*.*</include>
                            </includes>
                        </resource>
                    </webResources>
                    <archive>
                        <manifestEntries>
                            <groupId>${project.groupId}</groupId>
                            <version>${project.version}</version>
                            <project-name>${project.name}</project-name>
                            <artifactId>${project.artifactId}</artifactId>
                            <build>${built.on}</build>

                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <target>
                                <echo>Bouw artifact ${project.artifactId} versie ${versie}</echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>unpack-xsds</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>nl.bzk.brp.algemeen</groupId>
                                    <artifactId>brp-algemeen-koppelvlak</artifactId>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                                    <includes>xsd/**/*.xsd,xsd/**/*.xml</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <scm>
        <connection>scm:svn:https://www.modernodam.nl/svn/brp-code/trunk/levering/levering-services/mutatielevering</connection>
      <developerConnection>scm:svn:https://www.modernodam.nl/svn/brp-code/trunk/levering/levering-services/brp-levering-services-mutatielevering</developerConnection>
  </scm>

    <profiles>
        <profile>
            <id>reserveer-netwerk-poorten</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>poortenreserveren</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reserve-portnumbers</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <portNames>
                                        <portName>amq.server.port</portName>
                                        <portName>amq2.server.port</portName>
                                        <portName>kennisgeving.server.port</portName>
                                    </portNames>
                                    <outputFile>${project.build.testOutputDirectory}/ports.properties</outputFile>
                                    <minPortNumber>50000</minPortNumber>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <configuration>
                            <updateBranchVersions>true</updateBranchVersions>
                            <updateVersionsToSnapshot>true</updateVersionsToSnapshot>
                            <updateWorkingCopyVersions>true</updateWorkingCopyVersions>
                            <branchBase>https://www.modernodam.nl/svn/brp-code/levering/mutaties/branches</branchBase>
                            <tagBase>https://www.modernodam.nl/svn/brp-code/levering/mutaties/tags</tagBase>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>db.postgresql</name>
                </property>
            </activation>
            <properties>
                <maven.jdbc.driverClassName>org.postgresql.Driver</maven.jdbc.driverClassName>
                <maven.jdbc.url>jdbc:postgresql://${jenkins.postgresql.host}/brp_levering_services_mutatielevering</maven.jdbc.url>
            </properties>
        </profile>

        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-assembly</id>
                                <phase>pre-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-publish</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-tag-image</id>
                                <phase>install</phase>
                            </execution>
                            <execution>
                                <id>docker-push-tag</id>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-tag-image</id>
                                <phase>install</phase>
                            </execution>
                            <execution>
                                <id>docker-push-tag</id>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
