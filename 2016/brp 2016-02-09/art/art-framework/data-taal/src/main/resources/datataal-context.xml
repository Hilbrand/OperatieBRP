<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="false">

    <import resource="classpath:config/one-datasource-beans.xml" />

    <context:annotation-config />
    <context:component-scan base-package="nl.bzk.brp.datataal, nl.bzk.brp.dataaccess.repository.jpa">
        <context:exclude-filter type="assignable" expression="org.springframework.data.jpa.repository.JpaRepository"/>
        <context:exclude-filter type="regex" expression=".*VerantwoordingRepository.*" />
        <context:exclude-filter type="regex" expression=".*ToegangLeveringautorisatieRepository.*" />
    </context:component-scan>

    <bean id="persoonHisVolledigSerializer" class="nl.bzk.brp.serialisatie.persoon.PersoonHisVolledigStringSerializer"/>
    <bean id="afnemerIndicatieSerializer" class="nl.bzk.brp.serialisatie.afnemerindicatie.AfnemerIndicatieStringSerializer" />
    <context:component-scan base-package="nl.bzk.brp.blobifier" />

    <!-- Forceer hibernate JbossLogging om slf4j te gebruiken i.v.nums. ondersteuning Log4j 2.
     https://issues.apache.org/jira/browse/LOG4J2-172 -->
    <bean id="hibernateLoggingPropInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" value="#{@systemProperties}"/>
        <property name="targetMethod" value="putAll"/>
        <property name="arguments">
            <util:properties>
                <prop key="org.jboss.logging.provider">slf4j</prop>
            </util:properties>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="lezenSchrijvenTransactionManager"/>

    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="false" />
        <property name="generateDdl" value="false" />
        <property name="database" value="POSTGRESQL" />
        <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL82Dialect" />
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

    <util:properties id="jpaProperties">
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
        <prop key="hibernate.ejb.interceptor">nl.bzk.brp.model.basis.ALaagAfleidingInterceptor</prop>
    </util:properties>

    <bean id="lezenSchrijvenEntityManagerFactory" name="nl.bzk.brp.lezenschrijven" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="hibernateLoggingPropInitializer">
        <property name="persistenceUnitName" value="nl.bzk.brp.lezenschrijven"/>
        <property name="packagesToScan" value="nl.bzk.brp.model" />
        <property name="dataSource" ref="lezenSchrijvenDataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="jpaProperties" ref="jpaProperties"/>
    </bean>

    <bean id="lezenSchrijvenTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="lezenSchrijvenEntityManagerFactory" />
        <property name="jpaDialect" ref="jpaDialect" />
    </bean>

    <bean id="alleenLezenEntityManagerFactory" name="nl.bzk.brp.alleenlezen" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="hibernateLoggingPropInitializer">
        <property name="persistenceUnitName" value="nl.bzk.brp.lezenschrijven"/>
        <property name="packagesToScan" value="nl.bzk.brp.model" />
        <property name="dataSource" ref="lezenSchrijvenDataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="jpaProperties" ref="jpaProperties"/>
    </bean>

    <bean id="alleenLezenTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="alleenLezenEntityManagerFactory" />
        <property name="jpaDialect" ref="jpaDialect" />
    </bean>
</beans>
