<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <beans profile="!memoryDS">
	    <context:property-placeholder location="classpath:datasource.properties"/>
	</beans>

	<beans>
    	<import resource="main-beans.xml"/>
    </beans>

    <beans profile="memoryDS">
        <context:property-placeholder location="classpath:inmemory.properties" />
    </beans>

    <beans>
        <!-- Configuratie voor beide profielen -->
        <!-- Construct Atomikos USerTransactionService, needed to specify Atomikos settings -->
        <bean id="atomikosUserTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
              init-method="init" destroy-method="shutdownForce">
            <constructor-arg>
                <!-- IMPORTANT: specify all Atomikos properties here -->
                <props>
                    <prop key="com.atomikos.icatch.service">
                        com.atomikos.icatch.standalone.UserTransactionServiceFactory
                    </prop>
                    <prop key="com.atomikos.icatch.tm_unique_name">transactionmanager_${atomikos.unique_name:local}_
                    </prop>
                    <prop key="com.atomikos.icatch.log_base_name">transactionlog_${atomikos.unique_name:local}_</prop>
                </props>
            </constructor-arg>
        </bean>

        <!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
        <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
              destroy-method="close" depends-on="atomikosUserTransactionService">
            <!-- IMPORTANT: disable startup because the userTransactionService above does this -->
            <property name="startupTransactionService" value="false"/>

            <!--  when close is called, should we force transactions to terminate or not? -->
            <property name="forceShutdown">
                <value>true</value>
            </property>
        </bean>

        <!-- Also use Atomikos UserTransactionImp, needed to configure Spring  -->
        <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
              depends-on="atomikosUserTransactionService">
            <property name="transactionTimeout">
                <value>3600</value>
            </property>
        </bean>

        <!-- Configure the Spring framework to use JTA transactions from Atomikos -->
        <bean id="syncDalTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
            <property name="transactionManager">
                <ref bean="atomikosTransactionManager"/>
            </property>
            <property name="userTransaction">
                <ref bean="atomikosUserTransaction"/>
            </property>
        </bean>
    </beans>

    <beans profile="memoryDS">

        <bean id="syncDalJpaVendorAdapter"
            class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="showSql" value="false" />
            <property name="generateDdl" value="false" />
            <property name="database" value="HSQL" />
            <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
        </bean>


        <bean id="syncDalEntityManagerFactory"
            class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="persistenceUnitName" value="BrpEntities" />
            <property name="dataSource" ref="syncDalDataSource" />
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.cache.use_second_level_cache">false</prop>
                    <prop key="hibernate.cache.use_query_cache">false</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                    <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                    <prop key="net.sf.ehcache.configurationResourceName">synchronisatie-dal-stamtabel-ehcache.xml</prop>
                    <prop key="hibernate.generate_statistics">false</prop>
					<prop key="hibernate.transaction.jta.platform">nl.bzk.migratiebrp.synchronisatie.dal.repository.jta.AtomikosJtaPlatform</prop>
                    <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                </props>
            </property>
        </bean>

       <bean name="syncDalDataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">
            <property name="uniqueResourceName">
                <!--
                 | Tijdens jUnit testen kan de ApplicationContext meerdere keren worden geinstantieerd.
                 | Elke keer dient een unique naam gebruikt te worden, anders gaat Atomikos fout.
                  -->
                <bean class="nl.bzk.migratiebrp.util.common.UniqueName">
                    <property name="baseName" value="syncDalDatabase"/>
                </bean>
            </property>
            <property name="driverClassName" value="${jdbc.driverClassName:org.hsqldb.jdbcDriver}"/>
            <property name="url" value="${jdbc.url:jdbc:hsqldb:mem:testDb}"/>
            <property name="user" value="${jdbc.username:sa}"/>
            <property name="password" value="${jdbc.password:}"/>
            <property name="maxPoolSize" value="20"/>
            <property name="minPoolSize" value="10"/>
        </bean>

    </beans>

    <beans profile="!memoryDS">

        <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="showSql" value="false" />
            <property name="generateDdl" value="false" />
            <property name="database" value="POSTGRESQL" />
            <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
        </bean>

        <bean id="syncDalEntityManagerFactory"
            class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="persistenceUnitName" value="BrpEntities" />
            <property name="dataSource" ref="syncDalDataSource" />
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.cache.use_second_level_cache">false</prop>
                    <prop key="hibernate.cache.use_query_cache">false</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                    <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                    <prop key="net.sf.ehcache.configurationResourceName">synchronisatie-dal-stamtabel-ehcache.xml</prop>
                    <prop key="hibernate.generate_statistics">false</prop>
                    <prop key="hibernate.transaction.jta.platform">nl.bzk.migratiebrp.synchronisatie.dal.repository.jta.AtomikosJtaPlatform</prop>
                    <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                </props>
            </property>
        </bean>

        <bean id="syncDalDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
              destroy-method="close">
            <property name="uniqueResourceName">
                <bean class="nl.bzk.migratiebrp.util.common.UniqueName">
                    <property name="baseName" value="syncDalDatabase"/>
                </bean>
            </property>

            <property name="xaDataSourceClassName" value="${database.driver:org.postgresql.xa.PGXADataSource}"/>
            <property name="xaProperties">
                <props>
                    <prop key="ServerName">${database.host:localhost}</prop>
                    <prop key="PortNumber">${database.port:5432}</prop>
                    <prop key="DatabaseName">${database.name:BRP}</prop>
                    <prop key="User">${database.username:postgres}</prop>
                    <prop key="Password">${database.password:postgres}</prop>
                </props>
            </property>
            <property name="maxPoolSize" value="${database.maxpool:200}"/>
            <property name="minPoolSize" value="${database.minpool:1}"/>
            <property name="testQuery" value="select 41+1"/>
        </bean>

    </beans>

    <beans>
        <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
    </beans>
</beans>
