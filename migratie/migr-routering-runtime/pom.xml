<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>nl.bzk.migratiebrp</groupId>
    <artifactId>migr-routering</artifactId>
    <version>3.2.108-SNAPSHOT</version>
    <relativePath>../migr-routering</relativePath>
  </parent>
  <groupId>nl.bzk.migratiebrp.routering</groupId>
  <artifactId>migr-routering-runtime</artifactId>
  <name>Migr - Routering - Runtime</name>
  <packaging>jar</packaging>
  <dependencies>
    <!-- PROJECT -->
    <dependency>
      <groupId>nl.bzk.migratiebrp.util</groupId>
      <artifactId>migr-util-common</artifactId>
    </dependency>
    <!-- SPRING -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
    </dependency>
    <!-- ACTIVEMQ -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-pool</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-jaas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-kahadb-store</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-jdbc-store</artifactId>
    </dependency>
    <!-- JDBC -->
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>zip</id>
      <activation>
        <property>
          <name>!zip.skip</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>zip-assembly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>migr-routering-runtime</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/zip.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/zip.properties</filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-assembly</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker.properties</filter>
                  </filters>
                </configuration>
              </execution>
              <execution>
                <id>docker-db-assembly</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker-db</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker-db.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker_db.properties</filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>docker-db-make</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker-db</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t migr-routering-database .</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-make</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t ${project.artifactId} .</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-publish</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>docker-tag-db</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f migr-routering-database ${docker.registry}/migr-routering-database</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-tag-image</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f ${project.artifactId} ${docker.registry}/${project.artifactId}</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-db</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/migr-routering-database</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-tag</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/${project.artifactId}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-release</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>docker-tag-db-image</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag migr-routering-database migr-routering-database:${project.version}</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-tag-image</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag ${project.artifactId} ${project.artifactId}:${project.version}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
