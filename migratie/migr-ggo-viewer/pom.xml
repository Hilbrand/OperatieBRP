<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>nl.bzk.migratiebrp</groupId>
		<artifactId>migr-ggo</artifactId>
		<version>3.2.108-SNAPSHOT</version>
		<relativePath>../migr-ggo</relativePath>
	</parent>
	<groupId>nl.bzk.migratiebrp.ggo</groupId>
	<artifactId>migr-ggo-viewer</artifactId>
	<packaging>war</packaging>
	<name>Migr - GGO - Viewer</name>
	<description>Viewer as described in 02 Requirements/_03 GGO/02 Use cases/BRP Viewer.docx</description>
	
	<properties>
		<m2e.jpa.activation>false</m2e.jpa.activation>
	</properties>

	<dependencies>
		<!-- Project -->
		<dependency>
            <groupId>nl.bzk.migratiebrp.util</groupId>
            <artifactId>migr-util-common</artifactId>
        </dependency>
		<dependency>
			<groupId>nl.bzk.migratiebrp.bericht</groupId>
			<artifactId>migr-bericht-model</artifactId>
		</dependency>
		<dependency>
			<groupId>nl.bzk.migratiebrp.util</groupId>
			<artifactId>migr-util-excel</artifactId>
		</dependency>
		<dependency>
			<groupId>nl.bzk.migratiebrp.synchronisatie</groupId>
			<artifactId>migr-synchronisatie-dal</artifactId>
		</dependency>
        <dependency>
            <groupId>nl.bzk.migratiebrp.synchronisatie</groupId>
            <artifactId>migr-synchronisatie-dal</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.bzk.migratiebrp.conversie</groupId>
            <artifactId>migr-conversie-model</artifactId>
        </dependency>
		<dependency>
			<groupId>nl.bzk.migratiebrp.conversie</groupId>
			<artifactId>migr-conversie-regels</artifactId>
		</dependency>
        <dependency>
            <groupId>nl.bzk.migratiebrp.conversie</groupId>
            <artifactId>migr-conversie-regels</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!-- Security authenticatie etc. -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
		</dependency>

		<!-- COMMONS -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<!-- Velocity -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

		<!-- Provides a host of helper utilities for the java.lang API -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- jsr330 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>

		<!-- GBAV -->
		<dependency>
			<groupId>gbav</groupId>
			<artifactId>spontaan</artifactId>
		</dependency>
		<dependency>
            <groupId>gbav</groupId>
            <artifactId>spontaan-api</artifactId>
        </dependency>
		<dependency>
			<groupId>gbav</groupId>
			<artifactId>core</artifactId>
		</dependency>
		<dependency>
			<groupId>gbav</groupId>
			<artifactId>bcm</artifactId>
		</dependency>
		<dependency>
			<groupId>gbav</groupId>
			<artifactId>export</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

		<!-- TEST -->
		<!-- TEST -->
		<!-- TEST -->

		<dependency>
			<groupId>nl.bzk.migratiebrp.conversie</groupId>
			<artifactId>migr-conversie-model</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>


		<dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>

        <!--  selenium -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
	         <groupId>org.reflections</groupId>
	         <artifactId>reflections</artifactId>
	         <scope>test</scope>
        </dependency>

        <!-- HyperSQL als in memory alternatief voor PostgreSQL t.b.v. unit-testen -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Jetty -->
			<plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
				<configuration>
                    <jvmArgs>-XX:PermSize=256M -XX:MaxPermSize=512M</jvmArgs>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<useTestClasspath>true</useTestClasspath>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*IntegratieTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <basedir>${project.basedir}</basedir>
                    <includes>
                        <include>src/main/webapp/WEB-INF/velocity/help.html</include>
                    </includes>
                    <replacements>
                        <replacement>
                            <token>&gt;Versie .*&lt;/p&gt;</token>
                            <value>&gt;Versie ${project.version}&lt;/p&gt;</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.google.code.maven-replacer-plugin
										</groupId>
										<artifactId>
											replacer
										</artifactId>
										<versionRange>
											[1.5.3,)
										</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-assembly</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <finalName>docker-ggo-viewer</finalName>
                                    <appendAssemblyId>false</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/main/assembly/docker.xml</descriptor>
                                    </descriptors>
                                    <filters>
                                        <filter>src/main/assembly/docker.properties</filter>
                                    </filters>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-db-assembly</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <finalName>docker-ggo-viewer-db</finalName>
                                    <appendAssemblyId>false</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/main/assembly/docker-db.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <id>docker-db-make</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>target/docker-ggo-viewer-db</workingDirectory>
                                    <executable>docker</executable>
                                    <commandlineArgs>build -t migr-ggo-viewer-database .</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-make-ggo-viewer</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>target/docker-ggo-viewer</workingDirectory>
                                    <executable>docker</executable>
                                    <commandlineArgs>build -t ${project.artifactId} .</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-publish</id>
            <properties>
                <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <id>docker-tag-db</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>target</workingDirectory>
                                    <executable>docker</executable>
                                    <commandlineArgs>tag -f migr-ggo-viewer-database ${docker.registry}/migr-ggo-viewer-database</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-tag-image-ggo-viewer</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>target</workingDirectory>
                                    <executable>docker</executable>
                                    <commandlineArgs>tag -f ${project.artifactId} ${docker.registry}/${project.artifactId}</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-push-tag-ggo-viewer</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>target</workingDirectory>
                                    <executable>docker</executable>
                                    <commandlineArgs>push ${docker.registry}/${project.artifactId}</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-release</id>
            <properties>
                <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <id>docker-tag-image-ggo-viewer</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>target</workingDirectory>
                                    <executable>docker</executable>
                                    <commandlineArgs>tag ${project.artifactId} ${project.artifactId}:${project.version}</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
