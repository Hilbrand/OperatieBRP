<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>nl.bzk.migratiebrp</groupId>
    <artifactId>migr-synchronisatie</artifactId>
    <version>3.2.108-SNAPSHOT</version>
    <relativePath>../migr-synchronisatie</relativePath>
  </parent>
  <groupId>nl.bzk.migratiebrp.synchronisatie</groupId>
  <artifactId>migr-synchronisatie-runtime</artifactId>
  <name>Migr - Synchronisatie - Runtime</name>
  <dependencies>
    <!-- Project -->
    <dependency>
      <groupId>nl.bzk.migratiebrp.util</groupId>
      <artifactId>migr-util-common</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.util</groupId>
      <artifactId>migr-util-gbav</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.bericht</groupId>
      <artifactId>migr-bericht-model</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.routering</groupId>
      <artifactId>migr-routering-runtime</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.register</groupId>
      <artifactId>migr-register-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.util</groupId>
      <artifactId>migr-util-excel</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.synchronisatie</groupId>
      <artifactId>migr-synchronisatie-dal</artifactId>
    </dependency>
    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
    </dependency>
    <!-- jsr330 -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <!-- JMS -->
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms-api</artifactId>
    </dependency>
    <!-- Commons -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>
    <!-- JSON -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-hibernate4</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-smile</artifactId>
    </dependency>
    <!-- HornetQ -->
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-core-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-jms-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.netty</groupId>
      <artifactId>netty</artifactId>
    </dependency>
    <!-- ActiveMQ voor BRP Levering Queue, en als in-memory alternatief
            t.b.v. unit-testen -->
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
    </dependency>
    <!-- TEST -->
    <!-- TEST -->
    <!-- TEST -->
    <!-- mock queue -->
    <dependency>
      <groupId>com.mockrunner</groupId>
      <artifactId>mockrunner-jms</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Nodig voor scripts etc -->
    <dependency>
      <groupId>nl.bzk.migratiebrp.synchronisatie</groupId>
      <artifactId>migr-synchronisatie-dal</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.conversie</groupId>
      <artifactId>migr-conversie-regels</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.conversie</groupId>
      <artifactId>migr-conversie-model</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <!-- HyperSQL als in memory alternatief voor PostgreSQL t.b.v. unit-testen -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <!-- Geforked runnen vanwege MBean crashes van EHCache (meerdere testen die dezelfde EHCache gebruiken registeren dezelfde MBeans) -->
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>zip</id>
      <activation>
        <property>
          <name>!zip.skip</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>zip-assembly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>migr-sync-runtime</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/zip.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/zip.properties</filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <!-- Synchronisatie modus -->
              <execution>
                <id>docker-assembly-sync</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker-sync</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker-sync.properties</filter>
                  </filters>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar BRP-->
              <execution>
                <id>docker-assembly-naarbrp</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker-naarbrp</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker-naarbrp.properties</filter>
                  </filters>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar LO3-->
              <execution>
                <id>docker-assembly-naarlo3</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker-naarlo3</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker-naarlo3.properties</filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <!-- Synchronisatie modus -->
              <execution>
                <id>docker-make-sync</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker-sync</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t ${project.artifactId} .</commandlineArgs>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar BRP-->
              <execution>
                <id>docker-make-naarbrp</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker-naarbrp</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t ${project.artifactId}-naarbrp .</commandlineArgs>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar LO3-->
              <execution>
                <id>docker-make-naarlo3</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker-naarlo3</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t ${project.artifactId}-naarlo3 .</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-publish</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <!-- Synchronisatie modus -->
              <execution>
                <id>docker-tag-image-sync</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f ${project.artifactId} ${docker.registry}/${project.artifactId}</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-tag-sync</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/${project.artifactId}</commandlineArgs>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar BRP-->
              <execution>
                <id>docker-tag-image-naarbrp</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f ${project.artifactId}-naarbrp ${docker.registry}/${project.artifactId}-naarbrp</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-tag-naarbrp</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/${project.artifactId}-naarbrp</commandlineArgs>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar LO3-->
              <execution>
                <id>docker-tag-image-naarlo3</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f ${project.artifactId}-naarlo3 ${docker.registry}/${project.artifactId}-naarlo3</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-tag-naarlo3</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/${project.artifactId}-naarlo3</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-release</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <!-- Synchronisatie modus -->
              <execution>
                <id>docker-tag-image-sync</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag ${project.artifactId} ${project.artifactId}:${project.version}</commandlineArgs>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar BRP-->
              <execution>
                <id>docker-tag-image-naarbrp</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag ${project.artifactId}-naarbrp ${project.artifactId}-naarbrp:${project.version}</commandlineArgs>
                </configuration>
              </execution>
              <!-- Initiele vulling - Naar LO3-->
              <execution>
                <id>docker-tag-image-naarlo3</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag ${project.artifactId}-naarlo3 ${project.artifactId}-naarlo3:${project.version}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
