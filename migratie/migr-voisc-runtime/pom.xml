<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>nl.bzk.migratiebrp</groupId>
    <artifactId>migr-voisc</artifactId>
    <version>3.2.108-SNAPSHOT</version>
    <relativePath>../migr-voisc</relativePath>
  </parent>
  <groupId>nl.bzk.migratiebrp.voisc</groupId>
  <artifactId>migr-voisc-runtime</artifactId>
  <name>Migr - VOISC - Runtime</name>
  <packaging>jar</packaging>
  <dependencies>
    <!-- Project -->
    <dependency>
      <groupId>nl.bzk.migratiebrp.bericht</groupId>
      <artifactId>migr-bericht-model</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.register</groupId>
      <artifactId>migr-register-client</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.routering</groupId>
      <artifactId>migr-routering-runtime</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.voisc</groupId>
      <artifactId>migr-voisc-database</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.voisc</groupId>
      <artifactId>migr-voisc-spd</artifactId>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.tools</groupId>
      <artifactId>migr-tools-mailbox</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>nl.bzk.migratiebrp.register</groupId>
      <artifactId>migr-register-client</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>
    <!-- PostgreSQL JDBC -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
    </dependency>
    <dependency>
      <groupId>com.atomikos</groupId>
      <artifactId>transactions-jms</artifactId>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <!-- TEST -->
    <!-- TEST -->
    <!-- TEST -->
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- mock queue -->
    <dependency>
      <groupId>com.mockrunner</groupId>
      <artifactId>mockrunner-jms</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Voor de test mailboxserver -->
    <dependency>
      <groupId>gbav</groupId>
      <artifactId>core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gbav</groupId>
      <artifactId>spg-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- JMS -->
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms-api</artifactId>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
        									org.apache.maven.plugins
        								</groupId>
                    <artifactId>
        									maven-dependency-plugin
        								</artifactId>
                    <versionRange>
        									[2.7,)
        								</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <!-- Geforked runnen vanwege MBean crashes van EHCache (meerdere testen die dezelfde EHCache gebruiken registeren dezelfde MBeans) -->
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>zip</id>
      <activation>
        <property>
          <name>!zip.skip</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-voisc-db-sql</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>nl.bzk.migratiebrp.voisc</groupId>
                      <artifactId>migr-voisc-database</artifactId>
                      <version>${project.version}</version>
                      <type>jar</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}/voisc-db-sql</outputDirectory>
                      <includes>sql/*.sql</includes>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>zip-assembly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>migr-voisc-runtime</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/zip.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/zip.properties</filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>docker-assembly</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker.properties</filter>
                  </filters>
                </configuration>
              </execution>
              <execution>
                <id>docker-db-assembly</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker-db</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assembly/docker-db.xml</descriptor>
                  </descriptors>
                  <filters>
                    <filter>src/main/assembly/docker-db.properties</filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>docker-db-make</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker-db</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t migr-voisc-database .</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-make</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target/docker</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>build -t ${project.artifactId} .</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-publish</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>docker-tag-db</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f migr-voisc-database ${docker.registry}/migr-voisc-database</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-tag-image</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag -f ${project.artifactId} ${docker.registry}/${project.artifactId}</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-db</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/migr-voisc-database</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-push-tag</id>
                <phase>deploy</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>push ${docker.registry}/${project.artifactId}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-release</id>
      <properties>
        <docker.registry>fac-reg.modernodam.nl:5000</docker.registry>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>docker-tag-db-image</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag migr-voisc-database migr-voisc-database:${project.version}</commandlineArgs>
                </configuration>
              </execution>
              <execution>
                <id>docker-tag-image</id>
                <phase>install</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <workingDirectory>target</workingDirectory>
                  <executable>docker</executable>
                  <commandlineArgs>tag ${project.artifactId} ${project.artifactId}:${project.version}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
