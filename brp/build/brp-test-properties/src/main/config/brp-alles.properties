
#################################################################
# DATASOURCES
#################################################################

# datasource algemeen

jdbc.driverClassName=${template.jdbc.driver}
jdbc.url=${template.jdbc.url}
jdbc.username=${template.jdbc.user}
jdbc.password=${template.jdbc.password}

brp.database.timeout.seconden=10
brp.locking.timeout.seconden=10
jdbc.transactionisolation=2
#Voor bevraging servers kan de readonly property op true worden gezet
jdbc.readonly=false

# datasource naar de master database om locks te kunnen plaatsen en wijzigingen te kunnen doorvoeren

jdbc.master.driverClassName=${template.jdbc.master.driver}
jdbc.master.url=${template.jdbc.master.url}
jdbc.master.username=${template.jdbc.master.user}
jdbc.master.password=${template.jdbc.master.password}
jdbc.master.pool.initialSize=${template.jdbc.master.pool.initialSize}
jdbc.master.pool.maxActive=${template.jdbc.master.pool.maxActive}
jdbc.master.pool.minIdle=${template.jdbc.master.pool.minIdle}
jdbc.master.pool.maxIdle=${template.jdbc.master.pool.maxIdle}

# datasource voor protocolleren

jdbc.protocollering.driverClassName=${template.jdbc.protocollering.driver}
jdbc.protocollering.url=${template.jdbc.protocollering.url}
jdbc.protocollering.username=${template.jdbc.protocollering.user}
jdbc.protocollering.password=${template.jdbc.protocollering.password}
jdbc.protocollering.pool.initialSize=${template.jdbc.protocollering.pool.initialSize}
jdbc.protocollering.pool.maxActive=${template.jdbc.protocollering.pool.maxActive}
jdbc.protocollering.pool.minIdle=${template.jdbc.protocollering.pool.minIdle}
jdbc.protocollering.pool.maxIdle=${template.jdbc.protocollering.pool.maxIdle}

# datasource voor archivering

jdbc.archivering.driverClassName=${template.jdbc.archivering.driver}
jdbc.archivering.url=${template.jdbc.archivering.url}
jdbc.archivering.username=${template.jdbc.archivering.user}
jdbc.archivering.password=${template.jdbc.archivering.password}
jdbc.archivering.pool.initialSize=${template.jdbc.archivering.pool.initialSize}
jdbc.archivering.pool.maxActive=${template.jdbc.archivering.pool.maxActive}
jdbc.archivering.pool.minIdle=${template.jdbc.archivering.pool.minIdle}
jdbc.archivering.pool.maxIdle=${template.jdbc.archivering.pool.maxIdle}

# Connectie naar de database voor de JMS Broker (ActiveMQ)
jdbc.activemq.driverClassName=${template.jdbc.activemq.driver}
jdbc.activemq.url=${template.jdbc.activemq.url}
jdbc.activemq.username=${template.jdbc.activemq.user}
jdbc.activemq.password=${template.jdbc.activemq.password}

#################################################################
# JMS
#################################################################

# De url waarop de broker beschikbaar is.
# Voor de host zijn een aantal mogelijkheden:
#
# Localhost; ActiveMQ accepteert alleen connecties via de
# loopback interface,# dus van de lokale machine.
#
# Fullyqualified name van de host, bijvoorbeeld app01.modernodam.nl;
#   activeMQ accepteert connecties van buitenaf.
#
# 0.0.0.0; ActiveMQ accepteert connecties op alle interfaces,
# dus zowel van# buitenaf als vanaf de lokale machine.
#
berichtencentrale.url=${template.berichtcentrale.broker.url}

# De client url naar de broker
berichtcentrale.consumer-producer.url=${template.berichtcentrale.consumer-producer.url}

brp.queue.minpool=${template.brp.queue.minpool:3}
brp.queue.maxpool=${template.brp.queue.maxpool:20}

# Data opslag

# Voor het redelivery mechanisme van ActiveMQ is een
# data directory nodig waar tijdelijk berichten worden
# neergezet die opnieuw verzonden moeten worden.
# Deze directory heeft toegangsrechten nodig, zodat de gebruiker
# waarmee tomcat op het systeem draait in deze directory kan
# lezen en schrijven.
berichtencentrale.data.directory=${template.berichtcentrale.data.directory}
berichtencentrale.scheduler.directory=${template.berichtcentrale.scheduler.directory}

# Vrije geheugen voor activemq broker. Zodra deze verzadigd is, wordt er naar
# de temporary storage geschreven.
berichtencentrale.memory.usage=${template.berichtencentrale.memory.usage}

# Deze instelling wordt gebruikt als persistent messages niet in de database
# worden opgeslagen, maar op het lokale filesysteem (kahaDB). Momenteel wordt
# er nog een jdbcPersistenceAdapter gebruikt, dus wordt deze instelling genegeerd.
berichtencentrale.store.usage=${template.berichtencentrale.store.usage}

# Zodra memory verzadigd is, zal naar de temp locatie weggeschreven worden.
# Dit loopt op bij grote hoeveelheden non-persistent messages (topics). De temp
# storage wordt voor de zekerheid vrij ruim gezet in productieachtige omgevingen, omdat
# er niet gerecoverd wordt als de tempstorage verzadigd raakt.
# http://tmielke.blogspot.nl/2011/02/observations-on-activemqs-temp-storage.html
# http://akuntamukkala.blogspot.nl/2014/01/understanding-memory-usage-in-activemq.html
berichtencentrale.temp.usage=${template.berichtencentrale.temp.usage}

protocollering.bronapplicatie=${template.protocollering.bronapplicatie:BRPTest-localhost}
protocollering.jms.queue=ProtocolleringQueue
protocollering.jms.url=${template.berichtcentrale.consumer-producer.url}
protocollering.jms.concurrency=10

# Queue voor mutatielevering waarop te verwerken administratieve handelingen worden geplaatst door bijvoorbeeld Bijhouding.
jms.broker.ah.url=${template.berichtcentrale.consumer-producer.url}
jms.broker.ah.queue=AdministratieveHandelingen

# Broker url waar de queue voor afnemerindicaties zich bevindt
jms.broker.afnemerindicaties.url=${template.berichtcentrale.consumer-producer.url}

#Uitgaande berichten queues
jms.broker.afnemers.url=failover:(${template.berichtcentrale.consumer-producer.url})

#################################################################
# JMS (GBA)
#################################################################

# GBA queues, die gebruikt worden voor het plaatsen/verwijderen van afnemerindicaties.
afnemerindicaties.migratie.queue.name=GbaAfnemerindicaties
afnemerindicaties.migratie.antwoord.queue.name=GbaAfnemerindicatiesAntwoorden

# GBA queue, waarop archivering verzoeken vanuit migratie worden geplaatst.
archief.migratie.queue.name=GbaArchief

# GBA queue, waarop bijhoudingen vanuit migratie op worden genotificeerd.
bijhouding.gba.admhnd.publicatie.queue.name=GbaBijhoudingen

# GBA queue, waarop de module Verzending LO3 berichten plaatst.
jms.broker.lo3.leveringen.queue=GbaLeveringen

# GBA queues, die gebruikt worden voor het verwerken van toevallige gebeurtenissen.
toevalligegebeurtenis.migratie.queue.name=GbaToevalligeGebeurtenissen
toevalligegebeurtenis.migratie.antwoord.queue.name=GbaToevalligeGebeurtenissenAntwoorden

#################################################################
# SECURITY / KEYSTORES
#################################################################

security.keystore.private.password=${template.bijhouding.security.private.keystore.wachtwoord}
security.keystore.private.file=${template.bijhouding.security.private.keystore}

security.privatekey.alias=${template.bijhouding.security.privatekey.alias}
security.privatekey.password=${template.bijhouding.security.privatekey.wachtwoord}

#################################################################
# BRP SOFTWARE
#################################################################

# Bepaalt welke administratieve handelingen niet door de bezemwagen
# opgepakt moeten worden en niet in de verifierstap meegenomen worden.
soort.administratieve.handelingen.overslaan=G_B_A_INITIELE_VULLING

#################################################################
# BRP MODULE MUTATIELEVERING
#################################################################

# Definieert het aantal parallele threads in het mutatielevering
# process. Zet deze waarde op niet (veel) meer dan het fysiek
# aantal CPUs van de node. Als er meerdere modules op dezelfde
# node actief zijn wees dan nog behoudender.
mutatielevering.concurrent.listeners=${template.mutatielevering.concurrent.listeners}


#################################################################
# BRP MODULE VERZENDING
#################################################################

# Redelivery
# Selectie van queues (zie http://activemq.apache.org/wildcards.html)
jms.broker.redelivery.queue=>
# Wachttijd voor hersturing na eerste poging
jms.broker.redelivery.initial.delay=${template.verstrekking.redelivery.initial.delay}
# Wachttijd voor hersturing
jms.broker.redelivery.delay=${template.verstrekking.redelivery.delay}
# Aantal pogingen van hersturen
jms.broker.redelivery.max.redeliveries=${template.verstrekking.redelivery.max.redeliveries}

# Het aantal threads dat parallel actief is om afnemerqueues uit lezen
# LET OP: verhogen van deze property heeft als direct gevolg dat er
# meer database connecties geopend worden.
verzending.aantal.threads=20

# Het maximaal aantal berichten dat een per queue uitgelezen en verwerkt
# wordt door een thread. Deze waarde wordt gelijk gesteld aan de prefetch
# instelling op de JMS connectie. Een hogere waarde resulteert in efficienter
# gebruik van connecties en sessies (minder overhead), maar als keerzijde
# moeten andere queues langer wachten voordat ze uitgelezen worden.
verzending.aantal.berichten.periteratie=25

# De initiele wachttijd (msec) die gehanteerd wordt vóórdat de queue uitgelezen wordt.
# Dit hangt samen met de prefetch instelling die iets tijd# nodig heeft om berichten voor verwerking
# aan te leveren. Meer tijd is een grotere kans op het beschikbaar zijn van berichten
# (receiveNoWait() geeft soms geen berichten terug terwijl er wel berichten op de queue staan.)
verzending.wachttijd.bericht.ontvangen=250

# SSL

security.keystore.type=JKS
security.keystore.bestand=${template.kennisgeving.security.client.keystore}
security.keystore.wachtwoord=${template.kennisgeving.security.client.keystore.wachtwoord}
security.keystore.keywachtwoord=${template.kennisgeving.security.client.keystore.keywachtwoord}

security.truststore.type=JKS
security.truststore.bestand=${template.kennisgeving.security.afnemer.truststore}
security.truststore.wachtwoord=${template.kennisgeving.security.afnemer.truststore.wachtwoord}

security.disable.cn.check=true


#################################################################
# BRP MODULE BEZEMWAGEN
#################################################################


#De uitstel in milliseconden na elke "opruimsessie"
opruim.uitstel=${template.admhnd.bezemwagen.cyclus}

# Met maximale aantal administratieve handelingen dat per keer
# door de bezemwagen opgepakt wordt. Geen property betekent geen
# limiet.
aantal.administratieve.handelingen.per.keer=10


#################################################################
# BRP MODULE AFNEMER VOORBEELD
#################################################################

brp.afnemervoorbeeld.ispersistent=false



#################################################################
# BRP MODULE RELATEREN
#################################################################
jms.relateerservice.listener.broker.url=${template.berichtcentrale.consumer-producer.url}


#################################################################
# TWEAKS
#################################################################



jms.persoonserialisatienotificatie.listener.broker.url=${template.berichtcentrale.consumer-producer.url}
jms.persoonserialisatienotificatie.queue=PersoonSerialisatie

#Bepaalt of bestaande caches overschreven moeten worden. Zo niet, worden bestaande caches overgeslagen.
persoonserialisatienotificatie.overschijfbestaandecaches=false


hibernate.use.second.level.cache=false
hibernate.use.query.cache=false
hibernate.generate.statistics=true
