<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>nl.bzk.brp.art.data</groupId>
        <artifactId>brp-art-data</artifactId>
        <version>96-SNAPSHOT</version>
    </parent>

    <artifactId>brp-art-data-testdata-generator</artifactId>
	<packaging>jar</packaging>

	<name>BRP ART Data - Testdata generator</name>

	<!--
	 | Men kan de verschillende profiles actieveren:
	 | 		-P create-test-sql,backup
	 |
	 |		-Dcreate-test-sql=true -Dbackup=true
	 |
	 |In alle gevallen wordt er een runnable jar file aangemaakt.
	 |
	 | 	Andere settings:
	 |	-Ddburl=jdbc:postgresql://localhost/brp
	 |	-Ddbuser=brp
	 |	-Ddbpassword=brp
	 |	-Dxlsdir=
	 |	-Dsqlfile=
	 -->

	<properties>
		<xlsdir>${project.basedir}/src/test/resources/VoorbeeldTestdata-KUC002.xls</xlsdir>
		<sqlfile>${project.basedir}/target/arttestdatagenerator.sql</sqlfile>
	</properties>

	<dependencies>
        <dependency>
			<groupId>nl.bzk.brp.algemeen.opslag</groupId>
			<artifactId>brp-algemeen-opslag-database</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.6</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>

	</dependencies>
	<profiles>
		<profile>
			<id>create-test-sql</id>
			<activation>
				<property>
					<name>create-test-sql</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>1</id>
								<phase>test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>-c</argument>
										<argument>-x</argument>
										<argument>${xlsdir}</argument>
										<argument>-s</argument>
										<argument>${sqlfile}</argument>
									</arguments>
									<mainClass>nl.bzk.brp.art.util.main.UtilRunner</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- zip de sql statements -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/sql.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>

				</plugins>
			</build>
		</profile>
		<profile>
			<id>backup</id>
			<activation>
				<property>
					<name>backup</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>backup-db</id>
								<phase>test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>-b</argument>
										<argument>-d</argument>
										<argument>${dburl}</argument>
										<argument>-u</argument>
										<argument>${dbuser}</argument>
										<argument>-p</argument>
										<argument>${dbpassword}</argument>
									</arguments>
									<mainClass>nl.bzk.brp.art.util.main.UtilRunner</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- zip de sql statements -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/sql.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
				  <archive>
					<index>true</index>
					<manifest>
						<addDefaultSpecificationEntries />
						<classpathPrefix>lib/</classpathPrefix>
						<addClasspath>true</addClasspath>
						<mainClass>nl.bzk.brp.art.util.main.UtilRunner</mainClass>
					</manifest>
					<manifestEntries>
						<mode>development</mode>
						<url>${project.url}</url>
						<version>${project.version}</version>
						<project-name>${project.name}</project-name>
						<artifactId>${project.artifactId}</artifactId>
					</manifestEntries>
				  </archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
            <!--
             | shade-plugin relocate the required classes for this artifact INTO the jar file 'finalName'
             | as result that you have a single jar file that you can run from command line without any external dependency
             | Note: all dependendency with scope 'test', 'provided' ... are ignored.
             +-->
            <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-shade-plugin</artifactId>
                 <version>1.3.1</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
						<filters>
							<filter>
								<artifact>nl.bzk.brp.art.data:brp-art-data-testdata-generator</artifact>
<!--
								<excludes>
									<exclude>**/*.sql</exclude>
								</excludes>
-->
							</filter>
						</filters>
                    </configuration>
            </plugin>
		</plugins>
	</build>
	<scm>
		<connection>scm:svn:https://www.modernodam.nl/svn/brp-code/trunk/art/art-data/testdata-generator</connection>
	</scm>
</project>
