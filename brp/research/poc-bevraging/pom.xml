<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>nl.bzk.brp</groupId>
		<artifactId>root-pom</artifactId>
		<version>0.2.2</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.bzk.brp.research</groupId>
	<artifactId>poc-bevraging</artifactId>
	<name>BRP Service - POC bevraging</name>
	<version>0.0.1-SNAPSHOT</version>
	<description>
        POC om te kijken hoe we zo snel mogelijk Persoonslijsten kunnen opvragen
    </description>
	<packaging>jar</packaging>

	<properties>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<built.on>${maven.build.timestamp}</built.on>
		<sonar.exclusions>**/package-info.java</sonar.exclusions>
		<!-- De default JDBC properties bedoeld voor lokaal ontwikkelen met een 
			lokale PostgreSQL database. Voor Unit Testen in de Continuous Integration 
			omgeving is er een "ci" profile. -->
		<maven.jdbc.driverClassName>org.postgresql.Driver</maven.jdbc.driverClassName>
		<maven.jdbc.url>jdbc:postgresql://localhost/brp</maven.jdbc.url>
		<maven.jdbc.username>brp</maven.jdbc.username>
		<maven.jdbc.password>brp</maven.jdbc.password>
		<!-- speciale database connectie voor archivering/logging en protocollering -->
		<maven.jdbc.alp.driverClassName>org.postgresql.Driver</maven.jdbc.alp.driverClassName>
		<maven.jdbc.alp.url>jdbc:postgresql://localhost/brp</maven.jdbc.alp.url>
		<maven.jdbc.alp.username>brp</maven.jdbc.alp.username>
		<maven.jdbc.alp.password>brp</maven.jdbc.alp.password>
		<!-- database connectie voor testdata-generatie -->
		<maven.jdbc.testdata.driverClassName>org.postgresql.Driver</maven.jdbc.testdata.driverClassName>
        <maven.jdbc.testdata.url>jdbc:postgresql://localhost/brp</maven.jdbc.testdata.url>
        <maven.jdbc.testdata.username>brp</maven.jdbc.testdata.username>
        <maven.jdbc.testdata.password>brp</maven.jdbc.testdata.password>
		<!-- security -->
		<maven.security.privatekey.alias>serverkey</maven.security.privatekey.alias>
		<maven.security.privatekey.password>serverkeypassword</maven.security.privatekey.password>
		<brp-model.version>0.2.1</brp-model.version>

		<postgres.version>9.1-901.jdbc4</postgres.version>
	</properties>

	<repositories>
		<!-- <repository> <id>libs-release</id> <url>https://www.modernodam.nl/artifactory/libs-release/</url> 
			</repository> -->
		<repository>
			<id>central</id>
			<url>https://www.modernodam.nl/artifactory/remote-repos/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>libs-release-brp</id>
			<url>https://www.modernodam.nl/artifactory/libs-release-brp/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>libs-release</id>
			<url>https://www.modernodam.nl/artifactory/libs-release/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>db/*.sql</exclude>
					<exclude>db/update/*.sql</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>dbunit-maven-plugin</artifactId> 
				<dependencies> <dependency> <groupId>postgresql</groupId> <artifactId>postgresql</artifactId> 
				<version>${postgres.version}</version> </dependency> </dependencies> <configuration> 
				<driver>${maven.jdbc.driverClassName}</driver> <url>${maven.jdbc.url}</url> 
				<dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory</dataTypeFactoryName> 
				<username>${maven.jdbc.username}</username> <password>${maven.jdbc.password}</password> 
				<useQualifiedTableNames>true</useQualifiedTableNames> <format>flat</format> 
				</configuration> <executions> <execution> <id>insert</id> <goals> <goal>operation</goal> 
				</goals> <configuration> <type>CLEAN_INSERT</type> <src>${basedir}/src/test/resources/data/basic.xml</src> 
				</configuration> </execution> </executions> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> 
				<artifactId>sql-maven-plugin</artifactId> <configuration> <driver>${maven.jdbc.driverClassName}</driver> 
				<url>${maven.jdbc.url}</url> <username>${maven.jdbc.username}</username> 
				<password>${maven.jdbc.password}</password> <skip>${maven.test.skip}</skip> 
				</configuration> <executions> <execution> <phase>process-test-resources</phase> 
				<goals> <goal>execute</goal> </goals> <configuration> <srcFiles> <srcFile>${basedir}/src/main/resources/db/brp.sql</srcFile> 
				</srcFiles> </configuration> </execution> </executions> </plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<repositoryLayout>flat</repositoryLayout>
					<repositoryName>lib</repositoryName>
					<configurationDirectory>conf</configurationDirectory>
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<!-- Enable when encountering problems on windows: <useWildcardClassPath>true</useWildcardClassPath> -->
					<programs>
						<program>
							<mainClass>nl.bzk.brp.bevraging.app.CliApplicatie</mainClass>
							<name>testtool</name>
							<!-- Optional tuning: <jvmSettings/> -->
						</program>
					</programs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptor>src/main/assembly/bin.xml</descriptor>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.2.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- JEE -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>

		<!-- JPA/Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.12</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.12</version>
		</dependency>


		<!-- Database driver(s) -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Datasource related -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.32</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>net.sf.ehcache</groupId>
					<artifactId>ehcache-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.6.2</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.jibx</groupId>
			<artifactId>jibx-bind</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- JSR 303 with Hibernate Validator -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<!-- ToDo: Version zou naar Root pom moeten -->
			<version>3.2.1</version>
		</dependency>

		<!-- Added for POC -->
		<dependency>
			<groupId>commons-chain</groupId>
			<artifactId>commons-chain</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple</artifactId>
			<version>4.3</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream-hibernate</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>1.3</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.10</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>nl.bzk.brp</groupId>
			<artifactId>dataaccess</artifactId>
			<version>0.3.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>ci</id>
			<activation>
				<property>
					<name>ci.build</name>
				</property>
			</activation>
			<properties>
				<maven.jdbc.driverClassName>org.postgresql.Driver</maven.jdbc.driverClassName>
				<maven.jdbc.url>jdbc:postgresql://fac-db06.modernodam.nl/brp</maven.jdbc.url>
				<maven.jdbc.username>jenkins</maven.jdbc.username>
				<maven.jdbc.password>95thvef288ckf43re</maven.jdbc.password>
			</properties>
		</profile>
		<!-- Profile dat gebruikt wordt om nieuwe testdata-file (dbunit) te genereren, vanuit testdatabase van Team Sierra -->
		<!-- Generatie van dbunit-file kan via commando: 'mvn clean install -P export-testdata' -->
		<profile>
			<id>export-testdata</id>
			<activation>
                <activeByDefault>false</activeByDefault>
            </activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>${postgres.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<driver>${maven.jdbc.testdata.driverClassName}</driver>
							<url>${maven.jdbc.testdata.url}</url>
							<dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory</dataTypeFactoryName>
							<username>${maven.jdbc.testdata.username}</username>
							<password>${maven.jdbc.testdata.password}</password>
							<useQualifiedTableNames>true</useQualifiedTableNames>
						</configuration>
						<executions>
							<execution>
								<phase>process-test-sources</phase>
								<id>export</id>
								<configuration>
									<dest>${basedir}/src/test/resources/db/export.xml</dest>
								</configuration>
								<goals>
									<goal>export</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile dat gebruikt wordt om constraints te droppen voor vullen testdatabase via dbunit-testdata file -->
		<!-- (Her)vullen van testdata kan via commando: 'mvn clean install -Dtestdata=true' -->
		<profile>
			<id>drop-constraints</id>
			<activation>
				<property>
                    <name>testdata</name>
                    <value>true</value>
                </property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<configuration>
							<driver>${maven.jdbc.driverClassName}</driver>
							<url>${maven.jdbc.url}</url>
							<username>${maven.jdbc.username}</username>
							<password>${maven.jdbc.password}</password>
						</configuration>
						<executions>
							<execution>
								<id>drop-constraints</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<srcFiles>
										<srcFile>${basedir}/src/test/resources/db/testdataDropConstraints.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile dat gebruikt wordt om testdata te importeren via dbunit-testdata file voor vullen testdatabase -->
		<!-- (Her)vullen van testdata kan via commando: 'mvn clean install -Dtestdata=true' -->
		<profile>
			<id>import-testdata</id>
			<activation>
				<property>
                    <name>testdata</name>
                    <value>true</value>
                </property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>${postgres.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<driver>${maven.jdbc.driverClassName}</driver>
							<url>${maven.jdbc.url}</url>
							<dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory</dataTypeFactoryName>
							<username>${maven.jdbc.username}</username>
							<password>${maven.jdbc.password}</password>
							<useQualifiedTableNames>true</useQualifiedTableNames>
							<type>CLEAN_INSERT</type>
							<src>${basedir}/src/test/resources/db/export.xml</src>
						</configuration>
						<executions>
							<execution>
								<phase>process-test-resources</phase>
								<id>import</id>
								<goals>
									<goal>operation</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile dat gebruikt wordt om constraints te adden na vullen testdatabase via dbunit-testdata file -->
		<!-- (Her)vullen van testdata kan via commando: 'mvn clean install -Dtestdata=true' -->
		<profile>
			<id>add-constraints</id>
			<activation>
				<property>
                    <name>testdata</name>
                    <value>true</value>
                </property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<configuration>
							<driver>${maven.jdbc.driverClassName}</driver>
							<url>${maven.jdbc.url}</url>
							<username>${maven.jdbc.username}</username>
							<password>${maven.jdbc.password}</password>
						</configuration>
						<executions>
							<execution>
								<id>add-constraints</id>
								<phase>test-compile</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<srcFiles>
										<srcFile>${basedir}/src/test/resources/db/testdataAddConstraints.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile dat gebruikt wordt om de database te initieren via een plain backup -->
        <!-- Initieren van database kan via commando: 'mvn clean install -P initialize-database' -->
        <!-- Let op: zorg dat de te vullen database aangemaakt is en geen data bevat -->
        <profile>
            <id>initialize-database</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <configuration>
                            <driver>${maven.jdbc.driverClassName}</driver>
                            <url>${maven.jdbc.url}</url>
                            <username>${maven.jdbc.username}</username>
                            <password>${maven.jdbc.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>add-constraints</id>
                                <phase>process-test-sources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <srcFiles>
                                        <srcFile>${basedir}/src/test/resources/db/brp.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
	</profiles>
	<scm>
		<connection>scm:svn:https://www.modernodam.nl/svn/brp-code/research/poc-bevraging/branches/poc-serializatie</connection>
	</scm>
</project>